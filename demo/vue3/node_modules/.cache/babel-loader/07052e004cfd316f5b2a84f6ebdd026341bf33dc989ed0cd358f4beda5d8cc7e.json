{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6819dffa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"uploadVideoContainer\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"tipNote\"\n}, \" Note: Uploaded file should be no more than 10MB. Currently only support English. \", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"el-upload__text\"\n}, [/*#__PURE__*/_createTextVNode(\" Drop file here or \"), /*#__PURE__*/_createElementVNode(\"em\", null, \"click to upload\")], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 1,\n  class: \"successUpload\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"el-upload__text\"\n}, [/*#__PURE__*/_createTextVNode(\" Drop file here or \"), /*#__PURE__*/_createElementVNode(\"em\", null, \"click to upload\")], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0,\n  class: \"el-upload__tip\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_upload_filled = _resolveComponent(\"upload-filled\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_VideoCameraFilled = _resolveComponent(\"VideoCameraFilled\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_el_upload, {\n    class: \"upload-demo\",\n    ref: \"upload\",\n    action: \"#\",\n    \"auto-upload\": false,\n    limit: 1,\n    drag: \"\",\n    \"on-change\": $setup.uploadMp4,\n    accept: \".MP4, .AVI, .MOV, .MKV, .3GP, .M4V, .FLV, .MPG, .mp4, .avi, .mov, .mkv, .3gp, .m4v, .flv, .mpg\",\n    \"show-file-list\": false\n  }, {\n    tip: _withCtx(() => [!(typeof $setup.currentFile == 'undefined' || $setup.currentFile == '') ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode(_component_VideoCameraFilled)]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"span\", null, \"Filename: \" + _toDisplayString($setup.currentFile.name), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]),\n    default: _withCtx(() => [typeof $setup.currentFile == 'undefined' || $setup.currentFile == '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_icon, {\n      class: \"el-icon--upload\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_upload_filled)]),\n      _: 1 /* STABLE */\n    }), _hoisted_4])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_icon, {\n      class: \"el-icon--upload\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_upload_filled)]),\n      _: 1 /* STABLE */\n    }), _hoisted_6]))]),\n    _: 1 /* STABLE */\n  }, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAsB;gEAC/BC,oBAGM;EAHDD,KAAK,EAAC;AAAS,GAAC,oFAGrB;;;;gEAgBIC,oBAGM;EAHDD,KAAK,EAAC;AAAiB,kCAAC,qBAE3B,oCAAwB,YAApB,iBAAe;;;EAGXA,KAAK,EAAC;;gEAIhBC,oBAGM;EAHDD,KAAK,EAAC;AAAiB,kCAAC,qBAE3B,oCAAwB,YAApB,iBAAe;;;EAKnBA,KAAK,EAAC;;;;;;;uBApCdE,oBA8CM,OA9CNC,UA8CM,GA7CJC,UAGM,EACNC,aAwCYC;IAvCVN,KAAK,EAAC,aAAa;IACnBO,GAAG,EAAC,QAAQ;IACZC,MAAM,EAAC,GAAG;IACT,aAAW,EAAE,KAAK;IAClBC,KAAK,EAAE,CAAC;IACTC,IAAI,EAAJ,EAAI;IACH,WAAS,EAAEC,gBAAS;IACrBC,MAAM,EAAC,gGAAgG;IACtG,gBAAc,EAAE;;IAoBNC,GAAG,WACZ,MAQM,UANWF,kBAAW,mBAAmBA,kBAAW,yBAF1DT,oBAQM,OARNY,UAQM,GAJJT,aAEUU;wBADR,MAAqB,CAArBV,aAAqBW;;QAEvBf,oBAA6C,cAAvC,YAAU,oBAAGU,kBAAW,CAACM,IAAI;sBA1BvC,MAQM,QARYN,kBAAW,mBAAmBA,kBAAW,wBAA3DT,oBAQM,oBAPJG,aAEUU;MAFDf,KAAK,EAAC;IAAiB;wBAC9B,MAAiB,CAAjBK,aAAiBa;;QAEnBC,UAGM,qBAERjB,oBAQM,OARNkB,UAQM,GAPJf,aAEUU;MAFDf,KAAK,EAAC;IAAiB;wBAC9B,MAAiB,CAAjBK,aAAiBa;;QAEnBG,UAGM","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_el_upload","ref","action","limit","drag","$setup","accept","tip","_hoisted_7","_component_el_icon","_component_VideoCameraFilled","name","_component_upload_filled","_hoisted_4","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["/home/zhangbaozheng/emotional/Robust-MSA/vue3/src/components/UploadVideo.vue"],"sourcesContent":["<template>\n  <div class=\"uploadVideoContainer\">\n    <div class=\"tipNote\">\n      Note: Uploaded file should be no more than 10MB. Currently only support\n      English.\n    </div>\n    <el-upload\n      class=\"upload-demo\"\n      ref=\"upload\"\n      action=\"#\"\n      :auto-upload=\"false\"\n      :limit=\"1\"\n      drag\n      :on-change=\"uploadMp4\"\n      accept=\".MP4, .AVI, .MOV, .MKV, .3GP, .M4V, .FLV, .MPG, .mp4, .avi, .mov, .mkv, .3gp, .m4v, .flv, .mpg\"\n      :show-file-list=\"false\"\n    >\n      <div v-if=\"typeof currentFile == 'undefined' || currentFile == ''\">\n        <el-icon class=\"el-icon--upload\">\n          <upload-filled />\n        </el-icon>\n        <div class=\"el-upload__text\">\n          Drop file here or\n          <em>click to upload</em>\n        </div>\n      </div>\n      <div v-else class=\"successUpload\">\n        <el-icon class=\"el-icon--upload\">\n          <upload-filled />\n        </el-icon>\n        <div class=\"el-upload__text\">\n          Drop file here or\n          <em>click to upload</em>\n        </div>\n      </div>\n      <template #tip>\n        <div\n          class=\"el-upload__tip\"\n          v-if=\"!(typeof currentFile == 'undefined' || currentFile == '')\"\n        >\n          <el-icon>\n            <VideoCameraFilled />\n          </el-icon>\n          <span>Filename: {{ currentFile.name }}</span>\n        </div>\n      </template>\n    </el-upload>\n  </div>\n</template>\n    \n  <script setup>\nimport { ref } from \"vue\";\nconst currentFile = ref(\"\");\nconst upload = ref(\"\");\nconst uploadMp4 = async (file, fileList) => {\n  if (file.status === \"ready\") {\n    const is10M = file.size / 1024 / 1024 < 10;\n    if (is10M) {\n      currentFile.value = file.raw;\n    } else {\n      ElMessage({\n        message: \"Uploaded file should be no more than 10MB.\",\n        type: \"warning\",\n      });\n    }\n    upload.value.clearFiles();\n  }\n};\n</script>\n    \n  <style scoped>\n.tipNote {\n  font-size: 14px;\n  color: #5f5f5f;\n  margin-top: 50px;\n}\n.upload-demo {\n  margin-top: 15px;\n  height: 260px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}