{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  __name: 'UploadVideo',\n  emits: [\"transmitMp4\"],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const currentFile = ref(\"\");\n    const upload = ref(\"\");\n    const uploadMp4 = async (file, fileList) => {\n      if (file.status === \"ready\") {\n        const is10M = file.size / 1024 / 1024 < 10;\n        if (is10M) {\n          currentFile.value = file.raw;\n          emit(\"transmitMp4\", currentFile.value);\n        } else {\n          ElMessage({\n            message: \"Uploaded file should be no more than 10MB.\",\n            type: \"warning\"\n          });\n        }\n        upload.value.clearFiles();\n      }\n    };\n    const __returned__ = {\n      currentFile,\n      upload,\n      emit,\n      uploadMp4,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAmDA,SAASA,GAAG,QAAQ,KAAK;;;;;;;;;IACzB,MAAMC,WAAW,GAAGD,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAME,MAAM,GAAGF,GAAG,CAAC,EAAE,CAAC;IAEtB,MAAMG,SAAS,GAAG,OAAOC,IAAI,EAAEC,QAAQ,KAAK;MAC1C,IAAID,IAAI,CAACE,MAAM,KAAK,OAAO,EAAE;QAC3B,MAAMC,KAAK,GAAGH,IAAI,CAACI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;QAC1C,IAAID,KAAK,EAAE;UACTN,WAAW,CAACQ,KAAK,GAAGL,IAAI,CAACM,GAAG;UAC5BC,IAAI,CAAC,aAAa,EAAEV,WAAW,CAACQ,KAAK,CAAC;QACxC,CAAC,MAAM;UACLG,SAAS,CAAC;YACRC,OAAO,EAAE,4CAA4C;YACrDC,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;QACAZ,MAAM,CAACO,KAAK,CAACM,UAAU,EAAE;MAC3B;IACF,CAAC","names":["ref","currentFile","upload","uploadMp4","file","fileList","status","is10M","size","value","raw","emit","ElMessage","message","type","clearFiles"],"sources":["/home/zhangbaozheng/emotional/Robust-MSA/vue3/src/components/UploadVideo.vue"],"sourcesContent":["<template>\n  <div class=\"uploadVideoContainer\">\n    <div class=\"tipNote\">\n      Note: Uploaded file should be no more than 10MB. Currently only support\n      English.\n    </div>\n    <el-upload\n      class=\"upload-demo\"\n      ref=\"upload\"\n      action=\"#\"\n      :auto-upload=\"false\"\n      :limit=\"1\"\n      drag\n      :on-change=\"uploadMp4\"\n      accept=\".MP4, .AVI, .MOV, .MKV, .3GP, .M4V, .FLV, .MPG, .mp4, .avi, .mov, .mkv, .3gp, .m4v, .flv, .mpg\"\n      :show-file-list=\"false\"\n    >\n      <div v-if=\"typeof currentFile == 'undefined' || currentFile == ''\">\n        <el-icon class=\"el-icon--upload\">\n          <upload-filled />\n        </el-icon>\n        <div class=\"el-upload__text\">\n          Drop file here or\n          <em>click to upload</em>\n        </div>\n      </div>\n      <div v-else class=\"successUpload\">\n        <el-icon class=\"el-icon--upload\">\n          <upload-filled />\n        </el-icon>\n        <div class=\"el-upload__text\">\n          Drop file here or\n          <em>click to upload</em>\n        </div>\n      </div>\n      <template #tip>\n        <div\n          class=\"el-upload__tip\"\n          v-if=\"!(typeof currentFile == 'undefined' || currentFile == '')\"\n        >\n          <el-icon>\n            <VideoCameraFilled />\n          </el-icon>\n          <span>Filename: {{ currentFile.name }}</span>\n        </div>\n      </template>\n    </el-upload>\n  </div>\n</template>\n    \n  <script setup>\nimport { ref } from \"vue\";\nconst currentFile = ref(\"\");\nconst upload = ref(\"\");\nconst emit = defineEmits([\"transmitMp4\"]);\nconst uploadMp4 = async (file, fileList) => {\n  if (file.status === \"ready\") {\n    const is10M = file.size / 1024 / 1024 < 10;\n    if (is10M) {\n      currentFile.value = file.raw;\n      emit(\"transmitMp4\", currentFile.value);\n    } else {\n      ElMessage({\n        message: \"Uploaded file should be no more than 10MB.\",\n        type: \"warning\",\n      });\n    }\n    upload.value.clearFiles();\n  }\n};\n</script>\n    \n  <style scoped>\n.tipNote {\n  font-size: 14px;\n  color: #5f5f5f;\n  margin-top: 50px;\n}\n.upload-demo {\n  margin-top: 15px;\n  height: 260px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}