{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*!\n * wavesurfer.js regions plugin 6.4.0 (2022-11-05)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"WaveSurfer\", [], factory);else if (typeof exports === 'object') exports[\"WaveSurfer\"] = factory();else root[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(self, () => {\n  return (/******/(() => {\n      // webpackBootstrap\n      /******/\n      \"use strict\";\n\n      /******/\n      var __webpack_modules__ = {\n        /***/\"./src/plugin/regions/index.js\":\n        /*!*************************************!*\\\n          !*** ./src/plugin/regions/index.js ***!\n          \\*************************************/\n        /***/\n        (module, exports, __webpack_require__) => {\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          var _region = __webpack_require__( /*! ./region.js */\"./src/plugin/regions/region.js\");\n          function ownKeys(object, enumerableOnly) {\n            var keys = Object.keys(object);\n            if (Object.getOwnPropertySymbols) {\n              var symbols = Object.getOwnPropertySymbols(object);\n              enumerableOnly && (symbols = symbols.filter(function (sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n              })), keys.push.apply(keys, symbols);\n            }\n            return keys;\n          }\n          function _objectSpread(target) {\n            for (var i = 1; i < arguments.length; i++) {\n              var source = null != arguments[i] ? arguments[i] : {};\n              i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n                _defineProperty(target, key, source[key]);\n              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n              });\n            }\n            return target;\n          }\n          function _defineProperty(obj, key, value) {\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n            return obj;\n          }\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          /**\n           * Regions are visual overlays on waveform that can be used to play and loop\n           * portions of audio. Regions can be dragged and resized.\n           *\n           * Visual customization is possible via CSS (using the selectors\n           * `.wavesurfer-region` and `.wavesurfer-handle`).\n           *\n           * @implements {PluginClass}\n           * @extends {Observer}\n           *\n           * @example\n           * // es6\n           * import RegionsPlugin from 'wavesurfer.regions.js';\n           *\n           * // commonjs\n           * var RegionsPlugin = require('wavesurfer.regions.js');\n           *\n           * // if you are using <script> tags\n           * var RegionsPlugin = window.WaveSurfer.regions;\n           *\n           * // ... initialising wavesurfer with the plugin\n           * var wavesurfer = WaveSurfer.create({\n           *   // wavesurfer options ...\n           *   plugins: [\n           *     RegionsPlugin.create({\n           *       // plugin options ...\n           *     })\n           *   ]\n           * });\n           */\n          var RegionsPlugin = /*#__PURE__*/function () {\n            function RegionsPlugin(params, ws) {\n              var _this = this;\n              _classCallCheck(this, RegionsPlugin);\n              this.params = params;\n              this.wavesurfer = ws;\n              this.util = _objectSpread(_objectSpread({}, ws.util), {}, {\n                getRegionSnapToGridValue: function getRegionSnapToGridValue(value) {\n                  return _this.getRegionSnapToGridValue(value, params);\n                }\n              });\n              this.maxRegions = params.maxRegions;\n              this.regionsMinLength = params.regionsMinLength || null;\n\n              // turn the plugin instance into an observer\n              var observerPrototypeKeys = Object.getOwnPropertyNames(this.util.Observer.prototype);\n              observerPrototypeKeys.forEach(function (key) {\n                _region.Region.prototype[key] = _this.util.Observer.prototype[key];\n              });\n              this.wavesurfer.Region = _region.Region;\n\n              // By default, scroll the container if the user drags a region\n              // within 5% (based on its initial size) of its edge\n              var scrollWidthProportion = 0.05;\n              this._onBackendCreated = function () {\n                _this.wrapper = _this.wavesurfer.drawer.wrapper;\n                _this.orientation = _this.wavesurfer.drawer.orientation;\n                _this.defaultEdgeScrollWidth = _this.wrapper.clientWidth * scrollWidthProportion;\n                if (_this.params.regions) {\n                  _this.params.regions.forEach(function (region) {\n                    _this.add(region);\n                  });\n                }\n              };\n\n              // Id-based hash of regions\n              this.list = {};\n              this._onReady = function () {\n                _this.wrapper = _this.wavesurfer.drawer.wrapper;\n                _this.vertical = _this.wavesurfer.drawer.params.vertical;\n                if (_this.params.dragSelection) {\n                  _this.enableDragSelection(_this.params);\n                }\n                Object.keys(_this.list).forEach(function (id) {\n                  _this.list[id].updateRender();\n                });\n              };\n            }\n            _createClass(RegionsPlugin, [{\n              key: \"init\",\n              value: function init() {\n                // Check if ws is ready\n                if (this.wavesurfer.isReady) {\n                  this._onBackendCreated();\n                  this._onReady();\n                } else {\n                  this.wavesurfer.once('ready', this._onReady);\n                  this.wavesurfer.once('backend-created', this._onBackendCreated);\n                }\n              }\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.wavesurfer.un('ready', this._onReady);\n                this.wavesurfer.un('backend-created', this._onBackendCreated);\n                // Disabling `region-removed' because destroying the plugin calls\n                // the Region.remove() method that is also used to remove regions based\n                // on user input. This can cause confusion since teardown is not a\n                // user event, but would emit `region-removed` as if it was.\n                this.wavesurfer.setDisabledEventEmissions(['region-removed']);\n                this.disableDragSelection();\n                this.clear();\n              }\n\n              /**\n               * check to see if adding a new region would exceed maxRegions\n               * @return {boolean} whether we should proceed and create a region\n               * @private\n               */\n            }, {\n              key: \"wouldExceedMaxRegions\",\n              value: function wouldExceedMaxRegions() {\n                return this.maxRegions && Object.keys(this.list).length >= this.maxRegions;\n              }\n\n              /**\n               * Add a region\n               *\n               * @param {object} params Region parameters\n               * @return {Region} The created region\n               */\n            }, {\n              key: \"add\",\n              value: function add(params) {\n                var _this2 = this;\n                if (this.wouldExceedMaxRegions()) {\n                  return null;\n                }\n                params = _objectSpread({\n                  edgeScrollWidth: this.params.edgeScrollWidth || this.defaultEdgeScrollWidth\n                }, params);\n\n                // Take formatTimeCallback from plugin params if not already set\n                if (!params.formatTimeCallback && this.params.formatTimeCallback) {\n                  params = _objectSpread(_objectSpread({}, params), {}, {\n                    formatTimeCallback: this.params.formatTimeCallback\n                  });\n                }\n                if (!params.minLength && this.regionsMinLength) {\n                  params = _objectSpread(_objectSpread({}, params), {}, {\n                    minLength: this.regionsMinLength\n                  });\n                }\n                var region = new this.wavesurfer.Region(params, this.util, this.wavesurfer);\n                this.list[region.id] = region;\n                region.on('remove', function () {\n                  delete _this2.list[region.id];\n                });\n                return region;\n              }\n\n              /**\n               * Remove all regions\n               */\n            }, {\n              key: \"clear\",\n              value: function clear() {\n                var _this3 = this;\n                Object.keys(this.list).forEach(function (id) {\n                  _this3.list[id].remove();\n                });\n              }\n            }, {\n              key: \"enableDragSelection\",\n              value: function enableDragSelection(params) {\n                var _this4 = this;\n                this.disableDragSelection();\n                var slop = params.slop || 2;\n                var container = this.wavesurfer.drawer.container;\n                var scroll = params.scroll !== false && this.wavesurfer.params.scrollParent;\n                var scrollSpeed = params.scrollSpeed || 1;\n                var scrollThreshold = params.scrollThreshold || 10;\n                var drag;\n                var duration = this.wavesurfer.getDuration();\n                var maxScroll;\n                var start;\n                var region;\n                var touchId;\n                var pxMove = 0;\n                var scrollDirection;\n                var wrapperRect;\n\n                // Scroll when the user is dragging within the threshold\n                var edgeScroll = function edgeScroll(e) {\n                  if (!region || !scrollDirection) {\n                    return;\n                  }\n\n                  // Update scroll position\n                  var scrollLeft = _this4.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n                  _this4.wrapper.scrollLeft = scrollLeft = Math.min(maxScroll, Math.max(0, scrollLeft));\n\n                  // Update range\n                  var end = _this4.wavesurfer.drawer.handleEvent(e);\n                  region.update({\n                    start: Math.min(end * duration, start * duration),\n                    end: Math.max(end * duration, start * duration)\n                  });\n\n                  // Check that there is more to scroll and repeat\n                  if (scrollLeft < maxScroll && scrollLeft > 0) {\n                    window.requestAnimationFrame(function () {\n                      edgeScroll(e);\n                    });\n                  }\n                };\n                var eventDown = function eventDown(e) {\n                  if (e.touches && e.touches.length > 1) {\n                    return;\n                  }\n                  duration = _this4.wavesurfer.getDuration();\n                  touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n                  // Store for scroll calculations\n                  maxScroll = _this4.wrapper.scrollWidth - _this4.wrapper.clientWidth;\n                  wrapperRect = _this4.util.withOrientation(_this4.wrapper.getBoundingClientRect(), _this4.vertical);\n\n                  // set the region channel index based on the clicked area\n                  if (_this4.wavesurfer.params.splitChannels && _this4.wavesurfer.params.splitChannelsOptions.splitDragSelection) {\n                    var y = (e.touches ? e.touches[0].clientY : e.clientY) - wrapperRect.top;\n                    var channelCount = _this4.wavesurfer.backend.buffer != null ? _this4.wavesurfer.backend.buffer.numberOfChannels : 1;\n                    var channelHeight = _this4.wrapper.clientHeight / channelCount;\n                    var channelIdx = Math.floor(y / channelHeight);\n                    params.channelIdx = channelIdx;\n                    var channelColors = _this4.wavesurfer.params.splitChannelsOptions.channelColors[channelIdx];\n                    if (channelColors && channelColors.dragColor) {\n                      params.color = channelColors.dragColor;\n                    }\n                  }\n                  drag = true;\n                  start = _this4.wavesurfer.drawer.handleEvent(e, true);\n                  region = null;\n                  scrollDirection = null;\n                };\n                this.wrapper.addEventListener('mousedown', eventDown);\n                this.wrapper.addEventListener('touchstart', eventDown);\n                this.on('disable-drag-selection', function () {\n                  _this4.wrapper.removeEventListener('touchstart', eventDown);\n                  _this4.wrapper.removeEventListener('mousedown', eventDown);\n                });\n                var eventUp = function eventUp(e) {\n                  if (e.touches && e.touches.length > 1) {\n                    return;\n                  }\n                  drag = false;\n                  pxMove = 0;\n                  scrollDirection = null;\n                  if (region) {\n                    _this4.util.preventClick();\n                    region.fireEvent('update-end', e);\n                    _this4.wavesurfer.fireEvent('region-update-end', region, e);\n                  }\n                  region = null;\n                };\n                this.wrapper.addEventListener('mouseleave', eventUp);\n                this.wrapper.addEventListener('mouseup', eventUp);\n                this.wrapper.addEventListener('touchend', eventUp);\n                document.body.addEventListener('mouseup', eventUp);\n                document.body.addEventListener('touchend', eventUp);\n                this.on('disable-drag-selection', function () {\n                  document.body.removeEventListener('mouseup', eventUp);\n                  document.body.removeEventListener('touchend', eventUp);\n                  _this4.wrapper.removeEventListener('touchend', eventUp);\n                  _this4.wrapper.removeEventListener('mouseup', eventUp);\n                  _this4.wrapper.removeEventListener('mouseleave', eventUp);\n                });\n                var eventMove = function eventMove(event) {\n                  if (!drag) {\n                    return;\n                  }\n                  if (++pxMove <= slop) {\n                    return;\n                  }\n                  if (event.touches && event.touches.length > 1) {\n                    return;\n                  }\n                  if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                    return;\n                  }\n\n                  // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n                  if (!region) {\n                    region = _this4.add(params || {});\n                    if (!region) {\n                      return;\n                    }\n                  }\n                  var end = _this4.wavesurfer.drawer.handleEvent(event);\n                  var startUpdate = _this4.wavesurfer.regions.util.getRegionSnapToGridValue(start * duration);\n                  var endUpdate = _this4.wavesurfer.regions.util.getRegionSnapToGridValue(end * duration);\n                  region.update({\n                    start: Math.min(endUpdate, startUpdate),\n                    end: Math.max(endUpdate, startUpdate)\n                  });\n                  var orientedEvent = _this4.util.withOrientation(event, _this4.vertical);\n\n                  // If scrolling is enabled\n                  if (scroll && container.clientWidth < _this4.wrapper.scrollWidth) {\n                    // Check threshold based on mouse\n                    var x = orientedEvent.clientX - wrapperRect.left;\n                    if (x <= scrollThreshold) {\n                      scrollDirection = -1;\n                    } else if (x >= wrapperRect.right - scrollThreshold) {\n                      scrollDirection = 1;\n                    } else {\n                      scrollDirection = null;\n                    }\n                    scrollDirection && edgeScroll(event);\n                  }\n                };\n                this.wrapper.addEventListener('mousemove', eventMove);\n                this.wrapper.addEventListener('touchmove', eventMove);\n                this.on('disable-drag-selection', function () {\n                  _this4.wrapper.removeEventListener('touchmove', eventMove);\n                  _this4.wrapper.removeEventListener('mousemove', eventMove);\n                });\n                this.wavesurfer.on('region-created', function (region) {\n                  if (_this4.regionsMinLength) {\n                    region.minLength = _this4.regionsMinLength;\n                  }\n                });\n              }\n            }, {\n              key: \"disableDragSelection\",\n              value: function disableDragSelection() {\n                this.fireEvent('disable-drag-selection');\n              }\n\n              /**\n               * Get current region\n               *\n               * The smallest region that contains the current time. If several such\n               * regions exist, take the first. Return `null` if none exist.\n               *\n               * @returns {Region} The current region\n               */\n            }, {\n              key: \"getCurrentRegion\",\n              value: function getCurrentRegion() {\n                var _this5 = this;\n                var time = this.wavesurfer.getCurrentTime();\n                var min = null;\n                Object.keys(this.list).forEach(function (id) {\n                  var cur = _this5.list[id];\n                  if (cur.start <= time && cur.end >= time) {\n                    if (!min || cur.end - cur.start < min.end - min.start) {\n                      min = cur;\n                    }\n                  }\n                });\n                return min;\n              }\n\n              /**\n               * Match the value to the grid, if required\n               *\n               * If the regions plugin params have a snapToGridInterval set, return the\n               * value matching the nearest grid interval. If no snapToGridInterval is set,\n               * the passed value will be returned without modification.\n               *\n               * @param {number} value the value to snap to the grid, if needed\n               * @param {Object} params the regions plugin params\n               * @returns {number} value\n               */\n            }, {\n              key: \"getRegionSnapToGridValue\",\n              value: function getRegionSnapToGridValue(value, params) {\n                if (params.snapToGridInterval) {\n                  // the regions should snap to a grid\n                  var offset = params.snapToGridOffset || 0;\n                  return Math.round((value - offset) / params.snapToGridInterval) * params.snapToGridInterval + offset;\n                }\n\n                // no snap-to-grid\n                return value;\n              }\n            }], [{\n              key: \"create\",\n              value:\n              /**\n               * Regions plugin definition factory\n               *\n               * This function must be used to create a plugin definition which can be\n               * used by wavesurfer to correctly instantiate the plugin.\n               *\n               * @param {RegionsPluginParams} params parameters use to initialise the plugin\n               * @return {PluginDefinition} an object representing the plugin\n               */\n              function create(params) {\n                return {\n                  name: 'regions',\n                  deferInit: params && params.deferInit ? params.deferInit : false,\n                  params: params,\n                  staticProps: {\n                    addRegion: function addRegion(options) {\n                      if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                      }\n                      return this.regions.add(options);\n                    },\n                    clearRegions: function clearRegions() {\n                      this.regions && this.regions.clear();\n                    },\n                    enableDragSelection: function enableDragSelection(options) {\n                      if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                      }\n                      this.regions.enableDragSelection(options);\n                    },\n                    disableDragSelection: function disableDragSelection() {\n                      this.regions.disableDragSelection();\n                    }\n                  },\n                  instance: RegionsPlugin\n                };\n              }\n            }]);\n            return RegionsPlugin;\n          }();\n          exports[\"default\"] = RegionsPlugin;\n          module.exports = exports.default;\n\n          /***/\n        },\n\n        /***/\"./src/plugin/regions/region.js\":\n        /*!**************************************!*\\\n          !*** ./src/plugin/regions/region.js ***!\n          \\**************************************/\n        /***/\n        (__unused_webpack_module, exports) => {\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports.Region = void 0;\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          /**\n           *  @since 4.0.0\n           *\n           * (Single) Region plugin class\n           *\n           * Must be turned into an observer before instantiating. This is done in\n           * `RegionsPlugin` (main plugin class).\n           *\n           * @extends {Observer}\n           */\n          var Region = /*#__PURE__*/function () {\n            function Region(params, regionsUtils, ws) {\n              var _params$showTooltip,\n                _this = this;\n              _classCallCheck(this, Region);\n              this.wavesurfer = ws;\n              this.wrapper = ws.drawer.wrapper;\n              this.util = ws.util;\n              this.style = this.util.style;\n              this.regionsUtil = regionsUtils;\n              this.vertical = ws.drawer.params.vertical;\n              this.id = params.id == null ? ws.util.getId() : params.id;\n              this.start = Number(params.start) || 0;\n              this.end = params.end == null ?\n              // small marker-like region\n              this.start + 4 / this.wrapper.scrollWidth * this.wavesurfer.getDuration() : Number(params.end);\n              this.resize = params.resize === undefined ? true : Boolean(params.resize);\n              this.drag = params.drag === undefined ? true : Boolean(params.drag);\n              // reflect resize and drag state of region for region-updated listener\n              this.isResizing = false;\n              this.isDragging = false;\n              this.loop = Boolean(params.loop);\n              this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n              // The left and right handleStyle properties can be set to 'none' for\n              // no styling or can be assigned an object containing CSS properties.\n              this.handleStyle = params.handleStyle || {\n                left: {},\n                right: {}\n              };\n              this.handleLeftEl = null;\n              this.handleRightEl = null;\n              this.data = params.data || {};\n              this.attributes = params.attributes || {};\n              this.showTooltip = (_params$showTooltip = params.showTooltip) !== null && _params$showTooltip !== void 0 ? _params$showTooltip : true;\n              this.maxLength = params.maxLength;\n              // It assumes the minLength parameter value, or the regionsMinLength parameter value, if the first one not provided\n              this.minLength = params.minLength;\n              this._onRedraw = function () {\n                return _this.updateRender();\n              };\n              this.scroll = params.scroll !== false && ws.params.scrollParent;\n              this.scrollSpeed = params.scrollSpeed || 1;\n              this.scrollThreshold = params.scrollThreshold || 10;\n              // Determines whether the context menu is prevented from being opened.\n              this.preventContextMenu = params.preventContextMenu === undefined ? false : Boolean(params.preventContextMenu);\n\n              // select channel ID to set region\n              var channelIdx = params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n              this.channelIdx = channelIdx;\n              this.regionHeight = '100%';\n              this.marginTop = '0px';\n              if (channelIdx !== -1) {\n                var channelCount = this.wavesurfer.backend.buffer != null ? this.wavesurfer.backend.buffer.numberOfChannels : -1;\n                if (channelCount >= 0 && channelIdx < channelCount) {\n                  this.regionHeight = Math.floor(1 / channelCount * 100) + '%';\n                  this.marginTop = this.wavesurfer.getHeight() * channelIdx + 'px';\n                }\n              }\n              this.formatTimeCallback = params.formatTimeCallback;\n              this.edgeScrollWidth = params.edgeScrollWidth;\n              this.bindInOut();\n              this.render();\n              this.wavesurfer.on('zoom', this._onRedraw);\n              this.wavesurfer.on('redraw', this._onRedraw);\n              this.wavesurfer.fireEvent('region-created', this);\n            }\n\n            /* Update region params. */\n            _createClass(Region, [{\n              key: \"update\",\n              value: function update(params, eventParams) {\n                if (params.start != null) {\n                  this.start = Number(params.start);\n                }\n                if (params.end != null) {\n                  this.end = Number(params.end);\n                }\n                if (params.loop != null) {\n                  this.loop = Boolean(params.loop);\n                }\n                if (params.color != null) {\n                  this.color = params.color;\n                }\n                if (params.handleStyle != null) {\n                  this.handleStyle = params.handleStyle;\n                }\n                if (params.data != null) {\n                  this.data = params.data;\n                }\n                if (params.resize != null) {\n                  this.resize = Boolean(params.resize);\n                  this.updateHandlesResize(this.resize);\n                }\n                if (params.drag != null) {\n                  this.drag = Boolean(params.drag);\n                }\n                if (params.maxLength != null) {\n                  this.maxLength = Number(params.maxLength);\n                }\n                if (params.minLength != null) {\n                  this.minLength = Number(params.minLength);\n                }\n                if (params.attributes != null) {\n                  this.attributes = params.attributes;\n                }\n                this.updateRender();\n                this.fireEvent('update');\n                this.wavesurfer.fireEvent('region-updated', this, eventParams);\n              }\n\n              /* Remove a single region. */\n            }, {\n              key: \"remove\",\n              value: function remove() {\n                if (this.element) {\n                  this.wrapper.removeChild(this.element.domElement);\n                  this.element = null;\n                  this.fireEvent('remove');\n                  this.wavesurfer.un('zoom', this._onRedraw);\n                  this.wavesurfer.un('redraw', this._onRedraw);\n                  this.wavesurfer.fireEvent('region-removed', this);\n                }\n              }\n\n              /**\n               * Play the audio region.\n               * @param {number} start Optional offset to start playing at\n               */\n            }, {\n              key: \"play\",\n              value: function play(start) {\n                var s = start || this.start;\n                this.wavesurfer.play(s, this.end);\n                this.fireEvent('play');\n                this.wavesurfer.fireEvent('region-play', this);\n              }\n\n              /**\n               * Play the audio region in a loop.\n               * @param {number} start Optional offset to start playing at\n               * */\n            }, {\n              key: \"playLoop\",\n              value: function playLoop(start) {\n                this.loop = true;\n                this.play(start);\n              }\n\n              /**\n               * Set looping on/off.\n               * @param {boolean} loop True if should play in loop\n               */\n            }, {\n              key: \"setLoop\",\n              value: function setLoop(loop) {\n                this.loop = loop;\n              }\n\n              /* Render a region as a DOM element. */\n            }, {\n              key: \"render\",\n              value: function render() {\n                this.element = this.util.withOrientation(this.wrapper.appendChild(document.createElement('region')), this.vertical);\n                this.element.className = 'wavesurfer-region';\n                if (this.showTooltip) {\n                  this.element.title = this.formatTime(this.start, this.end);\n                }\n                this.element.setAttribute('data-id', this.id);\n                for (var attrname in this.attributes) {\n                  this.element.setAttribute('data-region-' + attrname, this.attributes[attrname]);\n                }\n                this.style(this.element, {\n                  position: 'absolute',\n                  zIndex: 3,\n                  height: this.regionHeight,\n                  top: this.marginTop\n                });\n\n                /* Resize handles */\n                if (this.resize) {\n                  this.handleLeftEl = this.util.withOrientation(this.element.appendChild(document.createElement('handle')), this.vertical);\n                  this.handleRightEl = this.util.withOrientation(this.element.appendChild(document.createElement('handle')), this.vertical);\n                  this.handleLeftEl.className = 'wavesurfer-handle wavesurfer-handle-start';\n                  this.handleRightEl.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n                  // Default CSS properties for both handles.\n                  var css = {\n                    cursor: this.vertical ? 'row-resize' : 'col-resize',\n                    position: 'absolute',\n                    top: '0px',\n                    width: '2px',\n                    height: '100%',\n                    backgroundColor: 'rgba(0, 0, 0, 1)'\n                  };\n\n                  // Merge CSS properties per handle.\n                  var handleLeftCss = this.handleStyle.left !== 'none' ? Object.assign({\n                    left: '0px'\n                  }, css, this.handleStyle.left) : null;\n                  var handleRightCss = this.handleStyle.right !== 'none' ? Object.assign({\n                    right: '0px'\n                  }, css, this.handleStyle.right) : null;\n                  if (handleLeftCss) {\n                    this.style(this.handleLeftEl, handleLeftCss);\n                  }\n                  if (handleRightCss) {\n                    this.style(this.handleRightEl, handleRightCss);\n                  }\n                }\n                this.updateRender();\n                this.bindEvents();\n              }\n            }, {\n              key: \"formatTime\",\n              value: function formatTime(start, end) {\n                if (this.formatTimeCallback) {\n                  return this.formatTimeCallback(start, end);\n                }\n                return (start == end ? [start] : [start, end]).map(function (time) {\n                  return [Math.floor(time % 3600 / 60),\n                  // minutes\n                  ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                  ].join(':');\n                }).join('-');\n              }\n            }, {\n              key: \"getWidth\",\n              value: function getWidth() {\n                return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n              }\n\n              /* Update element's position, width, color. */\n            }, {\n              key: \"updateRender\",\n              value: function updateRender() {\n                // duration varies during loading process, so don't overwrite important data\n                var dur = this.wavesurfer.getDuration();\n                var width = this.getWidth();\n                var startLimited = this.start;\n                var endLimited = this.end;\n                if (startLimited < 0) {\n                  startLimited = 0;\n                  endLimited = endLimited - startLimited;\n                }\n                if (endLimited > dur) {\n                  endLimited = dur;\n                  startLimited = dur - (endLimited - startLimited);\n                }\n                if (this.minLength != null) {\n                  endLimited = Math.max(startLimited + this.minLength, endLimited);\n                }\n                if (this.maxLength != null) {\n                  endLimited = Math.min(startLimited + this.maxLength, endLimited);\n                }\n                if (this.element != null) {\n                  // Calculate the left and width values of the region such that\n                  // no gaps appear between regions.\n                  var left = Math.round(startLimited / dur * width);\n                  var regionWidth = Math.round(endLimited / dur * width) - left;\n                  this.style(this.element, {\n                    left: left + 'px',\n                    width: regionWidth + 'px',\n                    backgroundColor: this.color,\n                    cursor: this.drag ? 'move' : 'default'\n                  });\n                  for (var attrname in this.attributes) {\n                    this.element.setAttribute('data-region-' + attrname, this.attributes[attrname]);\n                  }\n                  if (this.showTooltip) {\n                    this.element.title = this.formatTime(this.start, this.end);\n                  }\n                }\n              }\n\n              /* Bind audio events. */\n            }, {\n              key: \"bindInOut\",\n              value: function bindInOut() {\n                var _this2 = this;\n                this.firedIn = false;\n                this.firedOut = false;\n                var onProcess = function onProcess(time) {\n                  var start = Math.round(_this2.start * 10) / 10;\n                  var end = Math.round(_this2.end * 10) / 10;\n                  time = Math.round(time * 10) / 10;\n                  if (!_this2.firedOut && _this2.firedIn && (start > time || end <= time)) {\n                    _this2.firedOut = true;\n                    _this2.firedIn = false;\n                    _this2.fireEvent('out');\n                    _this2.wavesurfer.fireEvent('region-out', _this2);\n                  }\n                  if (!_this2.firedIn && start <= time && end > time) {\n                    _this2.firedIn = true;\n                    _this2.firedOut = false;\n                    _this2.fireEvent('in');\n                    _this2.wavesurfer.fireEvent('region-in', _this2);\n                  }\n                };\n                this.wavesurfer.backend.on('audioprocess', onProcess);\n                this.on('remove', function () {\n                  _this2.wavesurfer.backend.un('audioprocess', onProcess);\n                });\n\n                /* Loop playback. */\n                this.on('out', function () {\n                  if (_this2.loop) {\n                    var realTime = _this2.wavesurfer.getCurrentTime();\n                    if (realTime >= _this2.start && realTime <= _this2.end) {\n                      _this2.wavesurfer.play(_this2.start);\n                    }\n                  }\n                });\n              }\n\n              /* Bind DOM events. */\n            }, {\n              key: \"bindEvents\",\n              value: function bindEvents() {\n                var _this3 = this;\n                var preventContextMenu = this.preventContextMenu;\n                this.element.addEventListener('mouseenter', function (e) {\n                  _this3.fireEvent('mouseenter', e);\n                  _this3.wavesurfer.fireEvent('region-mouseenter', _this3, e);\n                });\n                this.element.addEventListener('mouseleave', function (e) {\n                  _this3.fireEvent('mouseleave', e);\n                  _this3.wavesurfer.fireEvent('region-mouseleave', _this3, e);\n                });\n                this.element.addEventListener('click', function (e) {\n                  e.preventDefault();\n                  _this3.fireEvent('click', e);\n                  _this3.wavesurfer.fireEvent('region-click', _this3, e);\n                });\n                this.element.addEventListener('dblclick', function (e) {\n                  e.stopPropagation();\n                  e.preventDefault();\n                  _this3.fireEvent('dblclick', e);\n                  _this3.wavesurfer.fireEvent('region-dblclick', _this3, e);\n                });\n                this.element.addEventListener('contextmenu', function (e) {\n                  if (preventContextMenu) {\n                    e.preventDefault();\n                  }\n                  _this3.fireEvent('contextmenu', e);\n                  _this3.wavesurfer.fireEvent('region-contextmenu', _this3, e);\n                });\n\n                /* Drag or resize on mousemove. */\n                if (this.drag || this.resize) {\n                  this.bindDragEvents();\n                }\n              }\n            }, {\n              key: \"bindDragEvents\",\n              value: function bindDragEvents() {\n                var _this4 = this;\n                var container = this.wavesurfer.drawer.container;\n                var scrollSpeed = this.scrollSpeed;\n                var scrollThreshold = this.scrollThreshold;\n                var startTime;\n                var touchId;\n                var drag;\n                var maxScroll;\n                var resize;\n                var updated = false;\n                var scrollDirection;\n                var wrapperRect;\n                var regionLeftHalfTime;\n                var regionRightHalfTime;\n\n                // Scroll when the user is dragging within the threshold\n                var edgeScroll = function edgeScroll(event) {\n                  var orientedEvent = _this4.util.withOrientation(event, _this4.vertical);\n                  var duration = _this4.wavesurfer.getDuration();\n                  if (!scrollDirection || !drag && !resize) {\n                    return;\n                  }\n                  var x = orientedEvent.clientX;\n                  var distanceBetweenCursorAndWrapperEdge = 0;\n                  var regionHalfTimeWidth = 0;\n                  var adjustment = 0;\n\n                  // Get the currently selected time according to the mouse position\n                  var time = _this4.regionsUtil.getRegionSnapToGridValue(_this4.wavesurfer.drawer.handleEvent(event) * duration);\n                  if (drag) {\n                    // Considering the point of contact with the region while edgescrolling\n                    if (scrollDirection === -1) {\n                      regionHalfTimeWidth = regionLeftHalfTime * _this4.wavesurfer.params.minPxPerSec;\n                      distanceBetweenCursorAndWrapperEdge = x - wrapperRect.left;\n                    } else {\n                      regionHalfTimeWidth = regionRightHalfTime * _this4.wavesurfer.params.minPxPerSec;\n                      distanceBetweenCursorAndWrapperEdge = wrapperRect.right - x;\n                    }\n                  } else {\n                    // Considering minLength while edgescroll\n                    var minLength = _this4.minLength;\n                    if (!minLength) {\n                      minLength = 0;\n                    }\n                    if (resize === 'start') {\n                      if (time > _this4.end - minLength) {\n                        time = _this4.end - minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                      }\n                      if (time < 0) {\n                        time = 0;\n                      }\n                    } else if (resize === 'end') {\n                      if (time < _this4.start + minLength) {\n                        time = _this4.start + minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                      }\n                      if (time > duration) {\n                        time = duration;\n                      }\n                    }\n                  }\n\n                  // Don't edgescroll if region has reached min or max limit\n                  var wrapperScrollLeft = _this4.wrapper.scrollLeft;\n                  if (scrollDirection === -1) {\n                    if (Math.round(wrapperScrollLeft) === 0) {\n                      return;\n                    }\n                    if (Math.round(wrapperScrollLeft - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge) <= 0) {\n                      return;\n                    }\n                  } else {\n                    if (Math.round(wrapperScrollLeft) === maxScroll) {\n                      return;\n                    }\n                    if (Math.round(wrapperScrollLeft + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge) >= maxScroll) {\n                      return;\n                    }\n                  }\n\n                  // Update scroll position\n                  var scrollLeft = wrapperScrollLeft - adjustment + scrollSpeed * scrollDirection;\n                  if (scrollDirection === -1) {\n                    var calculatedLeft = Math.max(0 + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                    _this4.wrapper.scrollLeft = scrollLeft = calculatedLeft;\n                  } else {\n                    var calculatedRight = Math.min(maxScroll - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                    _this4.wrapper.scrollLeft = scrollLeft = calculatedRight;\n                  }\n                  var delta = time - startTime;\n                  startTime = time;\n\n                  // Continue dragging or resizing\n                  drag ? _this4.onDrag(delta) : _this4.onResize(delta, resize);\n\n                  // Repeat\n                  window.requestAnimationFrame(function () {\n                    edgeScroll(event);\n                  });\n                };\n                var onDown = function onDown(event) {\n                  var duration = _this4.wavesurfer.getDuration();\n                  if (event.touches && event.touches.length > 1) {\n                    return;\n                  }\n                  touchId = event.targetTouches ? event.targetTouches[0].identifier : null;\n\n                  // stop the event propagation, if this region is resizable or draggable\n                  // and the event is therefore handled here.\n                  if (_this4.drag || _this4.resize) {\n                    event.stopPropagation();\n                  }\n\n                  // Store the selected startTime we begun dragging or resizing\n                  startTime = _this4.regionsUtil.getRegionSnapToGridValue(_this4.wavesurfer.drawer.handleEvent(event, true) * duration);\n\n                  // Store the selected point of contact when we begin dragging\n                  regionLeftHalfTime = startTime - _this4.start;\n                  regionRightHalfTime = _this4.end - startTime;\n\n                  // Store for scroll calculations\n                  maxScroll = _this4.wrapper.scrollWidth - _this4.wrapper.clientWidth;\n                  wrapperRect = _this4.util.withOrientation(_this4.wrapper.getBoundingClientRect(), _this4.vertical);\n                  _this4.isResizing = false;\n                  _this4.isDragging = false;\n                  if (event.target.tagName.toLowerCase() === 'handle') {\n                    _this4.isResizing = true;\n                    resize = event.target.classList.contains('wavesurfer-handle-start') ? 'start' : 'end';\n                  } else {\n                    _this4.isDragging = true;\n                    drag = true;\n                    resize = false;\n                  }\n                };\n                var onUp = function onUp(event) {\n                  if (event.touches && event.touches.length > 1) {\n                    return;\n                  }\n                  if (drag || resize) {\n                    _this4.isDragging = false;\n                    _this4.isResizing = false;\n                    drag = false;\n                    scrollDirection = null;\n                    resize = false;\n                  }\n                  if (updated) {\n                    updated = false;\n                    _this4.util.preventClick();\n                    _this4.fireEvent('update-end', event);\n                    _this4.wavesurfer.fireEvent('region-update-end', _this4, event);\n                  }\n                };\n                var onMove = function onMove(event) {\n                  var duration = _this4.wavesurfer.getDuration();\n                  var orientedEvent = _this4.util.withOrientation(event, _this4.vertical);\n                  if (event.touches && event.touches.length > 1) {\n                    return;\n                  }\n                  if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                    return;\n                  }\n                  if (!drag && !resize) {\n                    return;\n                  }\n                  var oldTime = startTime;\n                  var time = _this4.regionsUtil.getRegionSnapToGridValue(_this4.wavesurfer.drawer.handleEvent(event) * duration);\n                  if (drag) {\n                    // To maintain relative cursor start point while dragging\n                    var maxEnd = _this4.wavesurfer.getDuration();\n                    if (time > maxEnd - regionRightHalfTime) {\n                      time = maxEnd - regionRightHalfTime;\n                    }\n                    if (time - regionLeftHalfTime < 0) {\n                      time = regionLeftHalfTime;\n                    }\n                  }\n                  if (resize) {\n                    // To maintain relative cursor start point while resizing\n                    // we have to handle for minLength\n                    var minLength = _this4.minLength;\n                    if (!minLength) {\n                      minLength = 0;\n                    }\n                    if (resize === 'start') {\n                      if (time > _this4.end - minLength) {\n                        time = _this4.end - minLength;\n                      }\n                      if (time < 0) {\n                        time = 0;\n                      }\n                    } else if (resize === 'end') {\n                      if (time < _this4.start + minLength) {\n                        time = _this4.start + minLength;\n                      }\n                      if (time > duration) {\n                        time = duration;\n                      }\n                    }\n                  }\n                  var delta = time - startTime;\n                  startTime = time;\n\n                  // Drag\n                  if (_this4.drag && drag) {\n                    updated = updated || !!delta;\n                    _this4.onDrag(delta);\n                  }\n\n                  // Resize\n                  if (_this4.resize && resize) {\n                    updated = updated || !!delta;\n                    _this4.onResize(delta, resize);\n                  }\n                  if (_this4.scroll && container.clientWidth < _this4.wrapper.scrollWidth) {\n                    // Triggering edgescroll from within edgeScrollWidth\n                    var x = orientedEvent.clientX;\n\n                    // Check direction\n                    if (x < wrapperRect.left + _this4.edgeScrollWidth) {\n                      scrollDirection = -1;\n                    } else if (x > wrapperRect.right - _this4.edgeScrollWidth) {\n                      scrollDirection = 1;\n                    } else {\n                      scrollDirection = null;\n                    }\n                    if (scrollDirection) {\n                      edgeScroll(event);\n                    }\n                  }\n                };\n                this.element.addEventListener('mousedown', onDown);\n                this.element.addEventListener('touchstart', onDown);\n                document.body.addEventListener('mousemove', onMove);\n                document.body.addEventListener('touchmove', onMove, {\n                  passive: false\n                });\n                document.addEventListener('mouseup', onUp);\n                document.body.addEventListener('touchend', onUp);\n                this.on('remove', function () {\n                  document.removeEventListener('mouseup', onUp);\n                  document.body.removeEventListener('touchend', onUp);\n                  document.body.removeEventListener('mousemove', onMove);\n                  document.body.removeEventListener('touchmove', onMove);\n                });\n                this.wavesurfer.on('destroy', function () {\n                  document.removeEventListener('mouseup', onUp);\n                  document.body.removeEventListener('touchend', onUp);\n                });\n              }\n            }, {\n              key: \"onDrag\",\n              value: function onDrag(delta) {\n                var maxEnd = this.wavesurfer.getDuration();\n                if (this.end + delta > maxEnd) {\n                  delta = maxEnd - this.end;\n                }\n                if (this.start + delta < 0) {\n                  delta = this.start * -1;\n                }\n                var eventParams = {\n                  direction: this._getDragDirection(delta),\n                  action: 'drag'\n                };\n                this.update({\n                  start: this.start + delta,\n                  end: this.end + delta\n                }, eventParams);\n              }\n\n              /**\n               * Returns the direction of dragging region based on delta\n               * Negative delta means region is moving to the left\n               * Positive - to the right\n               * For zero delta the direction is not defined\n               * @param {number} delta Drag offset\n               * @returns {string|null} Direction 'left', 'right' or null\n               */\n            }, {\n              key: \"_getDragDirection\",\n              value: function _getDragDirection(delta) {\n                if (delta < 0) {\n                  return 'left';\n                }\n                if (delta > 0) {\n                  return 'right';\n                }\n                return null;\n              }\n\n              /**\n               * @example\n               * onResize(-5, 'start') // Moves the start point 5 seconds back\n               * onResize(0.5, 'end') // Moves the end point 0.5 seconds forward\n               *\n               * @param {number} delta How much to add or subtract, given in seconds\n               * @param {string} direction 'start 'or 'end'\n               */\n            }, {\n              key: \"onResize\",\n              value: function onResize(delta, direction) {\n                var duration = this.wavesurfer.getDuration();\n                var eventParams = {\n                  action: 'resize',\n                  direction: direction === 'start' ? 'left' : 'right'\n                };\n                if (direction === 'start') {\n                  // Check if changing the start by the given delta would result in the region being smaller than minLength\n                  if (delta > 0 && this.end - (this.start + delta) < this.minLength) {\n                    delta = this.end - this.minLength - this.start;\n                  }\n\n                  // Check if changing the start by the given delta would result in the region being larger than maxLength\n                  if (delta < 0 && this.end - (this.start + delta) > this.maxLength) {\n                    delta = this.end - this.start - this.maxLength;\n                  }\n                  if (delta < 0 && this.start + delta < 0) {\n                    delta = this.start * -1;\n                  }\n                  this.update({\n                    start: Math.min(this.start + delta, this.end),\n                    end: Math.max(this.start + delta, this.end)\n                  }, eventParams);\n                } else {\n                  // Check if changing the end by the given delta would result in the region being smaller than minLength\n                  if (delta < 0 && this.end + delta - this.start < this.minLength) {\n                    delta = this.start + this.minLength - this.end;\n                  }\n\n                  // Check if changing the end by the given delta would result in the region being larger than maxLength\n                  if (delta > 0 && this.end + delta - this.start > this.maxLength) {\n                    delta = this.maxLength - (this.end - this.start);\n                  }\n                  if (delta > 0 && this.end + delta > duration) {\n                    delta = duration - this.end;\n                  }\n                  this.update({\n                    start: Math.min(this.end + delta, this.start),\n                    end: Math.max(this.end + delta, this.start)\n                  }, eventParams);\n                }\n              }\n            }, {\n              key: \"updateHandlesResize\",\n              value: function updateHandlesResize(resize) {\n                var cursorStyle;\n                if (resize) {\n                  cursorStyle = this.vertical ? 'row-resize' : 'col-resize';\n                } else {\n                  cursorStyle = 'auto';\n                }\n                this.handleLeftEl && this.style(this.handleLeftEl, {\n                  cursor: cursorStyle\n                });\n                this.handleRightEl && this.style(this.handleRightEl, {\n                  cursor: cursorStyle\n                });\n              }\n            }]);\n            return Region;\n          }();\n          exports.Region = Region;\n\n          /***/\n        }\n\n        /******/\n      };\n      /************************************************************************/\n      /******/ // The module cache\n      /******/\n      var __webpack_module_cache__ = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/ // Check if module is in cache\n        /******/var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n        if (cachedModule !== undefined) {\n          /******/return cachedModule.exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/ // no module.id needed\n          /******/ // no module.loaded needed\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /************************************************************************/\n      /******/\n      /******/ // startup\n      /******/ // Load entry module and return exports\n      /******/ // This entry module is referenced by other modules so it can't be inlined\n      /******/\n      var __webpack_exports__ = __webpack_require__(\"./src/plugin/regions/index.js\");\n      /******/\n      /******/\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});","map":{"version":3,"mappings":"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","names":["module","define","exports","root","enumerableOnly","i","_defineProperty","Object","value","enumerable","configurable","writable","obj","descriptor","RegionsPlugin","params","ws","_classCallCheck","wavesurfer","util","getRegionSnapToGridValue","_this","maxRegions","regionsMinLength","observerPrototypeKeys","getOwnPropertyNames","Observer","prototype","forEach","Region","key","scrollWidthProportion","_onBackendCreated","wrapper","drawer","orientation","defaultEdgeScrollWidth","clientWidth","regions","add","region","list","_onReady","vertical","dragSelection","enableDragSelection","keys","id","updateRender","_createClass","isReady","once","un","setDisabledEventEmissions","disableDragSelection","clear","length","wouldExceedMaxRegions","edgeScrollWidth","formatTimeCallback","minLength","on","_this2","_this3","remove","slop","container","scroll","scrollParent","scrollSpeed","scrollThreshold","drag","duration","getDuration","maxScroll","start","touchId","pxMove","scrollDirection","wrapperRect","edgeScroll","e","scrollLeft","_this4","Math","min","max","end","handleEvent","update","window","requestAnimationFrame","eventDown","touches","targetTouches","identifier","scrollWidth","withOrientation","getBoundingClientRect","splitChannels","splitChannelsOptions","splitDragSelection","y","clientY","top","channelCount","backend","buffer","numberOfChannels","channelHeight","clientHeight","channelIdx","floor","channelColors","dragColor","color","addEventListener","removeEventListener","eventUp","preventClick","fireEvent","document","body","eventMove","event","startUpdate","endUpdate","orientedEvent","x","clientX","left","right","time","getCurrentTime","cur","_this5","snapToGridInterval","offset","snapToGridOffset","round","name","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","instance","regionsUtils","style","regionsUtil","getId","Number","resize","undefined","Boolean","isResizing","isDragging","loop","handleStyle","handleLeftEl","handleRightEl","data","attributes","showTooltip","maxLength","_onRedraw","preventContextMenu","parseInt","regionHeight","marginTop","getHeight","bindInOut","render","eventParams","updateHandlesResize","element","removeChild","domElement","s","play","appendChild","createElement","className","title","formatTime","setAttribute","attrname","position","zIndex","height","css","cursor","width","backgroundColor","handleLeftCss","assign","handleRightCss","bindEvents","map","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","regionWidth","firedIn","firedOut","onProcess","realTime","preventDefault","stopPropagation","bindDragEvents","startTime","updated","regionLeftHalfTime","regionRightHalfTime","distanceBetweenCursorAndWrapperEdge","regionHalfTimeWidth","adjustment","minPxPerSec","wrapperScrollLeft","calculatedLeft","calculatedRight","delta","onDrag","onResize","onDown","target","tagName","toLowerCase","classList","contains","onUp","onMove","oldTime","maxEnd","passive","direction","_getDragDirection","action","cursorStyle","__webpack_modules__"],"sourceRoot":"","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/src/plugin/regions/index.js","webpack://WaveSurfer/src/plugin/regions/region.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(self, () => {\nreturn ","/**\n *  @since 4.0.0 This class has been split\n *\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * @property {number} maxRegions Maximum number of regions that may be created by the user at one time.\n * `initPlugin('regions')`\n * @property {function} formatTimeCallback Allows custom formating for region tooltip.\n * @property {?number} edgeScrollWidth='5% from container edges' Optional width for edgeScroll to start\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\n * @property {?object} handleStyle A set of CSS properties used to style the left and right handle.\n * @property {?boolean} preventContextMenu=false Determines whether the context menu is prevented from being opened.\n * @property {boolean} showTooltip=true Enable/disable tooltip displaying start and end times when hovering over region.\n */\n\nimport {Region} from \"./region.js\";\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = {\n            ...ws.util,\n            getRegionSnapToGridValue: value => {\n                return this.getRegionSnapToGridValue(value, params);\n            }\n        };\n        this.maxRegions = params.maxRegions;\n        this.regionsMinLength = params.regionsMinLength || null;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        // By default, scroll the container if the user drags a region\n        // within 5% (based on its initial size) of its edge\n        const scrollWidthProportion = 0.05;\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this.orientation = this.wavesurfer.drawer.orientation;\n            this.defaultEdgeScrollWidth = this.wrapper.clientWidth * scrollWidthProportion;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this.vertical = this.wavesurfer.drawer.params.vertical;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        // Disabling `region-removed' because destroying the plugin calls\n        // the Region.remove() method that is also used to remove regions based\n        // on user input. This can cause confusion since teardown is not a\n        // user event, but would emit `region-removed` as if it was.\n        this.wavesurfer.setDisabledEventEmissions(['region-removed']);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * check to see if adding a new region would exceed maxRegions\n     * @return {boolean} whether we should proceed and create a region\n     * @private\n     */\n    wouldExceedMaxRegions() {\n        return (\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\n        );\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        if (this.wouldExceedMaxRegions()) {\n            return null;\n        }\n\n        params = {\n            edgeScrollWidth: this.params.edgeScrollWidth || this.defaultEdgeScrollWidth,\n            ...params\n        };\n\n        // Take formatTimeCallback from plugin params if not already set\n        if (!params.formatTimeCallback && this.params.formatTimeCallback) {\n            params = {...params, formatTimeCallback: this.params.formatTimeCallback};\n        }\n\n        if (!params.minLength && this.regionsMinLength) {\n            params = {...params, minLength: this.regionsMinLength};\n        }\n\n        const region = new this.wavesurfer.Region(params, this.util, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        this.disableDragSelection();\n\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth -\n                this.wrapper.clientWidth;\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            // set the region channel index based on the clicked area\n            if (this.wavesurfer.params.splitChannels && this.wavesurfer.params.splitChannelsOptions.splitDragSelection) {\n                const y = (e.touches ? e.touches[0].clientY : e.clientY) - wrapperRect.top;\n                const channelCount = this.wavesurfer.backend.buffer != null ? this.wavesurfer.backend.buffer.numberOfChannels : 1;\n                const channelHeight = this.wrapper.clientHeight / channelCount;\n                const channelIdx = Math.floor(y / channelHeight);\n                params.channelIdx = channelIdx;\n                const channelColors = this.wavesurfer.params.splitChannelsOptions.channelColors[channelIdx];\n                if (channelColors && channelColors.dragColor) {\n                    params.color = channelColors.dragColor;\n                }\n            }\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseleave', eventUp);\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n            this.wrapper.removeEventListener('mouseleave', eventUp);\n        });\n\n        const eventMove = event => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n            if (!region) {\n                region = this.add(params || {});\n                if (!region) {\n                    return;\n                }\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(event);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = orientedEvent.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(event);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n\n        this.wavesurfer.on('region-created', region => {\n            if (this.regionsMinLength) {\n                region.minLength = this.regionsMinLength;\n            }\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n","/**\n *  @since 4.0.0\n *\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nexport class Region {\n    constructor(params, regionsUtils, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.regionsUtil = regionsUtils;\n        this.vertical = ws.drawer.params.vertical;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                this.start +\n                (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        // The left and right handleStyle properties can be set to 'none' for\n        // no styling or can be assigned an object containing CSS properties.\n        this.handleStyle = params.handleStyle || {\n            left: {},\n            right: {}\n        };\n        this.handleLeftEl = null;\n        this.handleRightEl = null;\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n        this.showTooltip = params.showTooltip ?? true;\n\n        this.maxLength = params.maxLength;\n        // It assumes the minLength parameter value, or the regionsMinLength parameter value, if the first one not provided\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n        // Determines whether the context menu is prevented from being opened.\n        this.preventContextMenu =\n            params.preventContextMenu === undefined\n                ? false\n                : Boolean(params.preventContextMenu);\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.channelIdx = channelIdx;\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n\n        if (channelIdx !== -1) {\n            let channelCount =\n                this.wavesurfer.backend.buffer != null\n                    ? this.wavesurfer.backend.buffer.numberOfChannels\n                    : -1;\n            if (channelCount >= 0 && channelIdx < channelCount) {\n                this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n                this.marginTop =\n                    this.wavesurfer.getHeight() * channelIdx + 'px';\n            }\n        }\n\n        this.formatTimeCallback = params.formatTimeCallback;\n        this.edgeScrollWidth = params.edgeScrollWidth;\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params, eventParams) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n            this.updateHandlesResize(this.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this, eventParams);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element.domElement);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        this.loop = true;\n        this.play(start);\n    }\n\n    /**\n     * Set looping on/off.\n     * @param {boolean} loop True if should play in loop\n     */\n    setLoop(loop) {\n        this.loop = loop;\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        this.element = this.util.withOrientation(\n            this.wrapper.appendChild(document.createElement('region')),\n            this.vertical\n        );\n\n        this.element.className = 'wavesurfer-region';\n        if (this.showTooltip) {\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n        this.element.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            this.element.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(this.element, {\n            position: 'absolute',\n            zIndex: 3,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Resize handles */\n        if (this.resize) {\n            this.handleLeftEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n            this.handleRightEl = this.util.withOrientation(\n                this.element.appendChild(document.createElement('handle')),\n                this.vertical\n            );\n\n            this.handleLeftEl.className = 'wavesurfer-handle wavesurfer-handle-start';\n            this.handleRightEl.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n            // Default CSS properties for both handles.\n            const css = {\n                cursor: this.vertical ? 'row-resize' : 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '2px',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            };\n\n            // Merge CSS properties per handle.\n            const handleLeftCss =\n                this.handleStyle.left !== 'none'\n                    ? Object.assign(\n                        { left: '0px' },\n                        css,\n                        this.handleStyle.left\n                    )\n                    : null;\n            const handleRightCss =\n                this.handleStyle.right !== 'none'\n                    ? Object.assign(\n                        { right: '0px' },\n                        css,\n                        this.handleStyle.right\n                    )\n                    : null;\n\n            if (handleLeftCss) {\n                this.style(this.handleLeftEl, handleLeftCss);\n            }\n\n            if (handleRightCss) {\n                this.style(this.handleRightEl, handleRightCss);\n            }\n        }\n\n        this.updateRender();\n        this.bindEvents();\n    }\n\n    formatTime(start, end) {\n        if (this.formatTimeCallback) {\n            return this.formatTimeCallback(start, end);\n        }\n        return (start == end ? [start] : [start, end])\n            .map((time) =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        let startLimited = this.start;\n        let endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            if (this.showTooltip) {\n                this.element.title = this.formatTime(this.start, this.end);\n            }\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = (time) => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                const realTime = this.wavesurfer.getCurrentTime();\n                if (realTime >= this.start && realTime <= this.end) {\n                    this.wavesurfer.play(this.start);\n                }\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        const preventContextMenu = this.preventContextMenu;\n\n        this.element.addEventListener('mouseenter', (e) => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', (e) => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        this.element.addEventListener('contextmenu', (e) => {\n            if (preventContextMenu) {\n                e.preventDefault();\n            }\n            this.fireEvent('contextmenu', e);\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        const scrollThreshold = this.scrollThreshold;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n        let regionLeftHalfTime;\n        let regionRightHalfTime;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = (event) => {\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            const x = orientedEvent.clientX;\n            let distanceBetweenCursorAndWrapperEdge = 0;\n            let regionHalfTimeWidth = 0;\n            let adjustment = 0;\n\n            // Get the currently selected time according to the mouse position\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // Considering the point of contact with the region while edgescrolling\n                if (scrollDirection === -1) {\n                    regionHalfTimeWidth = regionLeftHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = x - wrapperRect.left;\n                } else {\n                    regionHalfTimeWidth = regionRightHalfTime * this.wavesurfer.params.minPxPerSec;\n                    distanceBetweenCursorAndWrapperEdge = wrapperRect.right - x;\n                }\n            } else {\n                // Considering minLength while edgescroll\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        time = this.start + minLength;\n                        adjustment = scrollSpeed * scrollDirection;\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            // Don't edgescroll if region has reached min or max limit\n            const wrapperScrollLeft = this.wrapper.scrollLeft;\n\n            if (scrollDirection === -1) {\n                if (Math.round(wrapperScrollLeft) === 0) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge) <= 0) {\n                    return;\n                }\n            } else {\n                if (Math.round(wrapperScrollLeft) === maxScroll) {\n                    return;\n                }\n\n                if (Math.round(wrapperScrollLeft + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge) >= maxScroll) {\n                    return;\n                }\n            }\n\n            // Update scroll position\n            let scrollLeft = wrapperScrollLeft - adjustment + scrollSpeed * scrollDirection;\n\n            if (scrollDirection === -1) {\n                const calculatedLeft = Math.max(0 + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedLeft;\n            } else {\n                const calculatedRight = Math.min(maxScroll - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge, scrollLeft);\n                this.wrapper.scrollLeft = scrollLeft = calculatedRight;\n            }\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(event);\n            });\n        };\n\n        const onDown = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            touchId = event.targetTouches ? event.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                event.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event, true) * duration\n            );\n\n            // Store the selected point of contact when we begin dragging\n            regionLeftHalfTime = startTime - this.start;\n            regionRightHalfTime = this.end - startTime;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n\n            wrapperRect = this.util.withOrientation(\n                this.wrapper.getBoundingClientRect(),\n                this.vertical\n            );\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (event.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = event.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = (event) => {\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', event);\n                this.wavesurfer.fireEvent('region-update-end', this, event);\n            }\n        };\n        const onMove = (event) => {\n            const duration = this.wavesurfer.getDuration();\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\n\n            if (event.touches && event.touches.length > 1) {\n                return;\n            }\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            let time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(event) * duration\n            );\n\n            if (drag) {\n                // To maintain relative cursor start point while dragging\n                const maxEnd = this.wavesurfer.getDuration();\n                if (time > maxEnd - regionRightHalfTime) {\n                    time = maxEnd - regionRightHalfTime;\n                }\n\n                if (time - regionLeftHalfTime < 0) {\n                    time = regionLeftHalfTime;\n                }\n            }\n\n            if (resize) {\n                // To maintain relative cursor start point while resizing\n                // we have to handle for minLength\n                let minLength = this.minLength;\n                if (!minLength) {\n                    minLength = 0;\n                }\n\n                if (resize === 'start') {\n                    if (time > this.end - minLength) {\n                        time = this.end - minLength;\n                    }\n\n                    if (time < 0) {\n                        time = 0;\n                    }\n                } else if (resize === 'end') {\n                    if (time < this.start + minLength) {\n                        time = this.start + minLength;\n                    }\n\n                    if (time > duration) {\n                        time = duration;\n                    }\n                }\n            }\n\n            let delta = time - startTime;\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll && container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                // Triggering edgescroll from within edgeScrollWidth\n                let x = orientedEvent.clientX;\n\n                // Check direction\n                if (x < wrapperRect.left + this.edgeScrollWidth) {\n                    scrollDirection = -1;\n                } else if (x > wrapperRect.right - this.edgeScrollWidth) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(event);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        document.body.addEventListener('mousemove', onMove);\n        document.body.addEventListener('touchmove', onMove, {passive: false});\n\n        document.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            document.body.removeEventListener('mousemove', onMove);\n            document.body.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd) {\n            delta = maxEnd - this.end;\n        }\n\n        if (this.start + delta < 0) {\n            delta = this.start * -1;\n        }\n\n        const eventParams = {\n            direction: this._getDragDirection(delta),\n            action: 'drag'\n        };\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        }, eventParams);\n    }\n\n    /**\n     * Returns the direction of dragging region based on delta\n     * Negative delta means region is moving to the left\n     * Positive - to the right\n     * For zero delta the direction is not defined\n     * @param {number} delta Drag offset\n     * @returns {string|null} Direction 'left', 'right' or null\n     */\n    _getDragDirection(delta) {\n        if (delta < 0) {\n            return 'left';\n        }\n        if (delta > 0) {\n            return 'right';\n        }\n        return null;\n    }\n\n    /**\n     * @example\n     * onResize(-5, 'start') // Moves the start point 5 seconds back\n     * onResize(0.5, 'end') // Moves the end point 0.5 seconds forward\n     *\n     * @param {number} delta How much to add or subtract, given in seconds\n     * @param {string} direction 'start 'or 'end'\n     */\n    onResize(delta, direction) {\n        const duration = this.wavesurfer.getDuration();\n        const eventParams = {\n            action: 'resize',\n            direction: direction === 'start' ? 'left' : 'right'\n        };\n\n        if (direction === 'start') {\n            // Check if changing the start by the given delta would result in the region being smaller than minLength\n            if (delta > 0 && this.end - (this.start + delta) < this.minLength) {\n                delta = this.end - this.minLength - this.start;\n            }\n\n            // Check if changing the start by the given delta would result in the region being larger than maxLength\n            if (delta < 0 && this.end - (this.start + delta) > this.maxLength) {\n                delta = this.end - this.start - this.maxLength;\n            }\n\n            if (delta < 0 && (this.start + delta) < 0) {\n                delta = this.start * -1;\n            }\n\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            }, eventParams);\n        } else {\n            // Check if changing the end by the given delta would result in the region being smaller than minLength\n            if (delta < 0 && this.end + delta - this.start < this.minLength) {\n                delta = this.start + this.minLength - this.end;\n            }\n\n            // Check if changing the end by the given delta would result in the region being larger than maxLength\n            if (delta > 0 && this.end + delta - this.start > this.maxLength) {\n                delta = this.maxLength - (this.end - this.start);\n            }\n\n            if (delta > 0 && (this.end + delta) > duration) {\n                delta = duration - this.end;\n            }\n\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            }, eventParams);\n        }\n    }\n\n    updateHandlesResize(resize) {\n        let cursorStyle;\n        if (resize) {\n            cursorStyle = this.vertical ? 'row-resize' : 'col-resize';\n        } else {\n            cursorStyle = 'auto';\n        }\n\n        this.handleLeftEl && this.style(this.handleLeftEl, { cursor: cursorStyle });\n        this.handleRightEl && this.style(this.handleRightEl, { cursor: cursorStyle });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/regions/index.js\");\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}