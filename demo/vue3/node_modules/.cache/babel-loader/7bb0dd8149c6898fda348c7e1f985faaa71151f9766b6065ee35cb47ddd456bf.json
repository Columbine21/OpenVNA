{"ast":null,"code":"import axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nvar Axios = axios.create();\n// Axios.defaults.baseURL = window.base_url\nAxios.interceptors.request.use(config => {\n  // token\n  return config;\n}, err => {\n  Promise.reject(err);\n});\nAxios.interceptors.response.use(config => {\n  return config;\n}, err => {\n  Promise.reject(err);\n});\n// get\nexport function get({\n  url,\n  params = {}\n}) {\n  return new Promise((resolve, reject) => {\n    Axios({\n      url: window.base_url + url,\n      params,\n      method: \"get\"\n    }).then(res => {\n      if (res.data.code == 400) {\n        ElMessage.error(res.data.msg);\n        reject(false);\n      } else {\n        resolve(res.data);\n      }\n    }).catch(err => {\n      ElMessage.error('Server failed to return data');\n      reject(err);\n    });\n  });\n}\n// post\nexport function post({\n  url,\n  data = {}\n}) {\n  return new Promise((resolve, reject) => {\n    axios({\n      url: window.base_url + url,\n      // params,\n      data,\n      method: \"post\"\n    }).then(res => {\n      if (res.data.code == 400) {\n        ElMessage.error(res.data.msg);\n        reject(false);\n      } else {\n        resolve(res);\n      }\n    }).catch(err => {\n      ElMessage.error('Server failed to return data');\n      reject(err);\n    });\n  });\n}\n// delete\nexport function del(url, params = {}, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios({\n      url: window.base_url + url,\n      method: \"delete\",\n      params,\n      data\n    }).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n//   Blob\nexport function getBlob({\n  url,\n  data\n}) {\n  return new Promise((resolve, reject) => {\n    axios.post(window.base_url + url, data, {\n      \"Content-type\": \"multipart/form-data\"\n    }).then(res => {\n      if (res.data.code == 400) {\n        ElMessage.error(res.data.msg);\n        reject(false);\n      } else {\n        resolve(res);\n      }\n    }).catch(err => {\n      ElMessage.error('Server failed to return data');\n      reject(err);\n    });\n  });\n}\nexport default {\n  get,\n  post,\n  del,\n  getBlob\n};","map":{"version":3,"names":["axios","ElMessage","Axios","create","interceptors","request","use","config","err","Promise","reject","response","get","url","params","resolve","window","base_url","method","then","res","data","code","error","msg","catch","post","del","getBlob"],"sources":["/home/zhangbaozheng/emotional/Robust-MSA/vue3/src/utils/request.js"],"sourcesContent":["import axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\nvar Axios = axios.create();\n// Axios.defaults.baseURL = window.base_url\nAxios.interceptors.request.use(\n  (config) => {\n    // token\n    return config;\n  },\n  (err) => {\n    Promise.reject(err);\n  }\n);\nAxios.interceptors.response.use(\n  (config) => {\n    return config;\n  },\n  (err) => {\n    Promise.reject(err);\n  }\n);\n// get\nexport function get({ url, params = {} }) {\n  return new Promise((resolve, reject) => {\n    Axios({\n      url: window.base_url + url,\n      params,\n      method: \"get\",\n    })\n      .then((res) => {\n        if (res.data.code == 400) {\n          ElMessage.error(res.data.msg);\n          reject(false);\n        } else {\n          resolve(res.data);\n        }\n      })\n      .catch((err) => {\n        ElMessage.error('Server failed to return data');\n        reject(err);\n      });\n  });\n}\n// post\nexport function post({ url, data = {} }) {\n  return new Promise((resolve, reject) => {\n    axios({\n      url: window.base_url + url,\n      // params,\n      data,\n      method: \"post\",\n    })\n      .then((res) => {\n        if (res.data.code == 400) {\n          ElMessage.error(res.data.msg);\n          reject(false);\n        } else {\n          resolve(res);\n        }\n      })\n      .catch((err) => {\n        ElMessage.error('Server failed to return data');\n        reject(err);\n      });\n  });\n}\n// delete\nexport function del(url, params = {}, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios({\n      url: window.base_url + url,\n      method: \"delete\",\n      params,\n      data,\n    })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n//   Blob\nexport function getBlob({url, data}) {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(window.base_url + url, data, {\n        \"Content-type\": \"multipart/form-data\"\n      })\n      .then(res => {\n        if (res.data.code == 400) {\n          ElMessage.error(res.data.msg);\n          reject(false);\n        } else {\n          resolve(res);\n        }\n      }).catch((err) => {\n        ElMessage.error('Server failed to return data');\n        reject(err);\n      });\n  });\n}\n\nexport default {\n  get,\n  post,\n  del,\n  getBlob\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,IAAIC,KAAK,GAAGF,KAAK,CAACG,MAAM,EAAE;AAC1B;AACAD,KAAK,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;EACV;EACA,OAAOA,MAAM;AACf,CAAC,EACAC,GAAG,IAAK;EACPC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AACrB,CAAC,CACF;AACDN,KAAK,CAACE,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC5BC,MAAM,IAAK;EACV,OAAOA,MAAM;AACf,CAAC,EACAC,GAAG,IAAK;EACPC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AACrB,CAAC,CACF;AACD;AACA,OAAO,SAASI,GAAG,CAAC;EAAEC,GAAG;EAAEC,MAAM,GAAG,CAAC;AAAE,CAAC,EAAE;EACxC,OAAO,IAAIL,OAAO,CAAC,CAACM,OAAO,EAAEL,MAAM,KAAK;IACtCR,KAAK,CAAC;MACJW,GAAG,EAAEG,MAAM,CAACC,QAAQ,GAAGJ,GAAG;MAC1BC,MAAM;MACNI,MAAM,EAAE;IACV,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,IAAI,CAACC,IAAI,IAAI,GAAG,EAAE;QACxBrB,SAAS,CAACsB,KAAK,CAACH,GAAG,CAACC,IAAI,CAACG,GAAG,CAAC;QAC7Bd,MAAM,CAAC,KAAK,CAAC;MACf,CAAC,MAAM;QACLK,OAAO,CAACK,GAAG,CAACC,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,CACDI,KAAK,CAAEjB,GAAG,IAAK;MACdP,SAAS,CAACsB,KAAK,CAAC,8BAA8B,CAAC;MAC/Cb,MAAM,CAACF,GAAG,CAAC;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AACA;AACA,OAAO,SAASkB,IAAI,CAAC;EAAEb,GAAG;EAAEQ,IAAI,GAAG,CAAC;AAAE,CAAC,EAAE;EACvC,OAAO,IAAIZ,OAAO,CAAC,CAACM,OAAO,EAAEL,MAAM,KAAK;IACtCV,KAAK,CAAC;MACJa,GAAG,EAAEG,MAAM,CAACC,QAAQ,GAAGJ,GAAG;MAC1B;MACAQ,IAAI;MACJH,MAAM,EAAE;IACV,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,IAAI,CAACC,IAAI,IAAI,GAAG,EAAE;QACxBrB,SAAS,CAACsB,KAAK,CAACH,GAAG,CAACC,IAAI,CAACG,GAAG,CAAC;QAC7Bd,MAAM,CAAC,KAAK,CAAC;MACf,CAAC,MAAM;QACLK,OAAO,CAACK,GAAG,CAAC;MACd;IACF,CAAC,CAAC,CACDK,KAAK,CAAEjB,GAAG,IAAK;MACdP,SAAS,CAACsB,KAAK,CAAC,8BAA8B,CAAC;MAC/Cb,MAAM,CAACF,GAAG,CAAC;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AACA;AACA,OAAO,SAASmB,GAAG,CAACd,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAEO,IAAI,GAAG,CAAC,CAAC,EAAE;EAC/C,OAAO,IAAIZ,OAAO,CAAC,CAACM,OAAO,EAAEL,MAAM,KAAK;IACtCV,KAAK,CAAC;MACJa,GAAG,EAAEG,MAAM,CAACC,QAAQ,GAAGJ,GAAG;MAC1BK,MAAM,EAAE,QAAQ;MAChBJ,MAAM;MACNO;IACF,CAAC,CAAC,CACCF,IAAI,CAAEC,GAAG,IAAK;MACbL,OAAO,CAACK,GAAG,CAAC;IACd,CAAC,CAAC,CACDK,KAAK,CAAEjB,GAAG,IAAK;MACdE,MAAM,CAACF,GAAG,CAAC;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AACA;AACA,OAAO,SAASoB,OAAO,CAAC;EAACf,GAAG;EAAEQ;AAAI,CAAC,EAAE;EACnC,OAAO,IAAIZ,OAAO,CAAC,CAACM,OAAO,EAAEL,MAAM,KAAK;IACtCV,KAAK,CACF0B,IAAI,CAACV,MAAM,CAACC,QAAQ,GAAGJ,GAAG,EAAEQ,IAAI,EAAE;MACjC,cAAc,EAAE;IAClB,CAAC,CAAC,CACDF,IAAI,CAACC,GAAG,IAAI;MACX,IAAIA,GAAG,CAACC,IAAI,CAACC,IAAI,IAAI,GAAG,EAAE;QACxBrB,SAAS,CAACsB,KAAK,CAACH,GAAG,CAACC,IAAI,CAACG,GAAG,CAAC;QAC7Bd,MAAM,CAAC,KAAK,CAAC;MACf,CAAC,MAAM;QACLK,OAAO,CAACK,GAAG,CAAC;MACd;IACF,CAAC,CAAC,CAACK,KAAK,CAAEjB,GAAG,IAAK;MAChBP,SAAS,CAACsB,KAAK,CAAC,8BAA8B,CAAC;MAC/Cb,MAAM,CAACF,GAAG,CAAC;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AAEA,eAAe;EACbI,GAAG;EACHc,IAAI;EACJC,GAAG;EACHC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}