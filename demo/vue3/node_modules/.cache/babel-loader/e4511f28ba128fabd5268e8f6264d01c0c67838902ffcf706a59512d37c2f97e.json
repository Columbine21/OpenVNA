{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c04f6a9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"addNoiseContainer\"\n};\nconst _hoisted_2 = {\n  class: \"methodContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    shadow: \"always\",\n    class: \"methodContent fromMethod\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_form, {\n      model: $setup.a_form_item,\n      \"label-width\": \"90px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"Method\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.a_form_item.modality,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.a_form_item.modality = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio, {\n            label: \"audio\"\n          }), _createVNode(_component_el_radio, {\n            label: \"video\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Time mode\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.a_form_item.time_mode,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.a_form_item.time_mode = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio, {\n            label: \"exact\"\n          }), _createVNode(_component_el_radio, {\n            label: \"percent\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Start time\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.a_form_item.start,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.a_form_item.start = $event),\n          placeholder: \"Please input start time\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"End time\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.a_form_item.end,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.a_form_item.end = $event),\n          placeholder: \"Please input end time\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Type\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.a_form_item.type,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.a_form_item.type = $event),\n          placeholder: \"please select your zone\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.options_details['audio']['type'], item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item,\n              label: item,\n              value: item\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), !($setup.a_form_item.type == 'volume' || $setup.a_form_item.type == 'mute' || $setup.a_form_item.type == 'lowpass') ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"Option\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.a_form_item.option.type,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.a_form_item.option.type = $event),\n          class: \"halfSelect\",\n          placeholder: \"please select\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.options_details['audio'][$setup.a_form_item.type], item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item,\n              label: item,\n              value: item\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\" -- \"), _createVNode(_component_el_input, {\n          modelValue: $setup.a_form_item.option.value,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.a_form_item.option.value = $event),\n          placeholder: \"num\",\n          class: \"halfInput\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.a_form_item.type == 'volume' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"Volume\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.a_form_item.option.value,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.a_form_item.option.value = $event),\n          placeholder: \"0 to 1\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.a_form_item.type == 'lowpass' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"Lowpass\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.a_form_item.option.value,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.a_form_item.option.value = $event),\n          placeholder: \"Hz\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"success\",\n          class: \"addButton\",\n          plain: \"\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Add\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","shadow","_createElementVNode","_hoisted_2","_component_el_form","model","$setup","_component_el_form_item","label","_component_el_radio_group","modality","_component_el_radio","time_mode","_component_el_input","start","placeholder","type","end","_component_el_select","_Fragment","item","_createBlock","_component_el_option","key","value","option","_component_el_button","plain"],"sourceRoot":"","sources":["/home/zhangbaozheng/emotional/Robust-MSA/vue3/src/components/AddNoise.vue"],"sourcesContent":["<template>\n  <div class=\"addNoiseContainer\">\n    <el-card shadow=\"always\" class=\"methodContent fromMethod\">\n      <div class=\"methodContainer\">\n        <el-form :model=\"a_form_item\" label-width=\"90px\">\n          <el-form-item label=\"Method\">\n            <el-radio-group v-model=\"a_form_item.modality\">\n              <el-radio label=\"audio\" />\n              <el-radio label=\"video\" />\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Time mode\">\n            <el-radio-group v-model=\"a_form_item.time_mode\">\n              <el-radio label=\"exact\" />\n              <el-radio label=\"percent\" />\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Start time\">\n            <el-input\n              v-model=\"a_form_item.start\"\n              placeholder=\"Please input start time\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item label=\"End time\">\n            <el-input\n              v-model=\"a_form_item.end\"\n              placeholder=\"Please input end time\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item label=\"Type\">\n            <el-select\n              v-model=\"a_form_item.type\"\n              placeholder=\"please select your zone\"\n            >\n              <el-option\n                v-for=\"item in options_details['audio']['type']\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item\n            v-if=\"\n              !(\n                a_form_item.type == 'volume' ||\n                a_form_item.type == 'mute' ||\n                a_form_item.type == 'lowpass'\n              )\n            \"\n            label=\"Option\"\n          >\n            <el-select\n              v-model=\"a_form_item.option.type\"\n              class=\"halfSelect\"\n              placeholder=\"please select\"\n            >\n              <el-option\n                v-for=\"item in options_details['audio'][a_form_item.type]\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              />\n            </el-select>\n            --\n            <el-input\n              v-model=\"a_form_item.option.value\"\n              placeholder=\"num\"\n              class=\"halfInput\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item v-if=\"a_form_item.type == 'volume'\" label=\"Volume\">\n            <el-input\n              v-model=\"a_form_item.option.value\"\n              placeholder=\"0 to 1\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item v-if=\"a_form_item.type == 'lowpass'\" label=\"Lowpass\">\n            <el-input\n              v-model=\"a_form_item.option.value\"\n              placeholder=\"Hz\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"success\" class=\"addButton\" plain>Add</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n  </div>\n</template>\n  \n<script setup>\nimport { ref } from \"vue\";\nconst a_form_item = ref({\n  modality: \"audio\",\n  type: \"\",\n  time_mode: \"exact\",\n  start: \"\",\n  end: \"\",\n  option: {\n    type: [],\n    value: \"\",\n  },\n});\nconst v_form_item = ref({\n  type: \"\",\n  time_mode: \"exact\",\n  start: \"\",\n  end: \"\",\n  option: {\n    type: [],\n    value: \"\",\n  },\n});\nconst options_details = ref({\n  audio: {\n    coloran: [\n      \"white\",\n      \"pink\",\n      \"brown\",\n      \"blue\",\n      \"violet\",\n      \"grey\",\n      \"brown\",\n      \"violet\",\n    ],\n    background: [\n      \"random\",\n      \"metro\",\n      \"office\",\n      \"park\",\n      \"restaurant\",\n      \"traffic\",\n      \"white\",\n      \"music_soothing\",\n      \"music_tense\",\n      \"song_gentle\",\n      \"song_rock\",\n    ],\n    sudden: [\"random\", \"beep\", \"glass\", \"thunder\", \"dog\"],\n    reverb: [\"hall\", \"room\"],\n    others_required: [\"volume\"],\n    no_required: [\"mute\"],\n    type: [\n      \"mute\",\n      \"volume\",\n      \"lowpass\",\n      \"reverb\",\n      \"sudden\",\n      \"background\",\n      \"coloran\",\n    ],\n  },\n  video: {\n    type: [\n      \"blank\",\n      \"avgblur\",\n      \"gblur\",\n      \"impulse_value\",\n      \"occlusion\",\n      \"color\",\n      \"color_channel_swapping\",\n      \"color_inversion\",\n    ],\n    no_required: [\"blank\", \"color_inversion\"],\n  },\n});\n</script>\n  \n<style scoped>\n.methodContent {\n  width: 320px;\n  overflow: hidden;\n  margin-top: 10px;\n}\n\n.fromMethod {\n  height: auto;\n}\n\n.fromMethod .el-form-item {\n  margin-bottom: 10px;\n}\n\n.halfSelect {\n  width: 140px;\n}\n.halfInput {\n  width: 57px;\n}\n.addButton {\n  width: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}