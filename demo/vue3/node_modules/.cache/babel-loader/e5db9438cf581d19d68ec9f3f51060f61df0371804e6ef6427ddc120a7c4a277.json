{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c04f6a9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"addNoiseContainer\"\n};\nconst _hoisted_2 = {\n  class: \"methodContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    shadow: \"always\",\n    class: \"methodContent fromMethod\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <el-form :model=\\\"a_form_item\\\" label-width=\\\"90px\\\">\\n          <el-form-item label=\\\"Modality\\\">\\n            <el-radio-group v-model=\\\"a_form_item.modality\\\">\\n              <el-radio label=\\\"audio\\\" />\\n              <el-radio label=\\\"video\\\" />\\n            </el-radio-group>\\n          </el-form-item>\\n          <el-form-item label=\\\"Start time\\\">\\n            <el-input\\n              v-model=\\\"a_form_item.start\\\"\\n              placeholder=\\\"Please input start time\\\"\\n              type=\\\"text\\\"\\n            />\\n          </el-form-item>\\n          <el-form-item label=\\\"End time\\\">\\n            <el-input\\n              v-model=\\\"a_form_item.end\\\"\\n              placeholder=\\\"Please input end time\\\"\\n              type=\\\"text\\\"\\n            />\\n          </el-form-item>\\n          <el-form-item label=\\\"Type\\\">\\n            <el-select\\n              v-model=\\\"a_form_item.type\\\"\\n              placeholder=\\\"please select your zone\\\"\\n            >\\n              <el-option\\n                v-for=\\\"item in options_details['audio']['type']\\\"\\n                :key=\\\"item\\\"\\n                :label=\\\"item\\\"\\n                :value=\\\"item\\\"\\n              />\\n            </el-select>\\n          </el-form-item>\\n          <el-form-item\\n            v-if=\\\"\\n              !(\\n                a_form_item.type == 'volume' ||\\n                a_form_item.type == 'mute' ||\\n                a_form_item.type == 'lowpass'\\n              )\\n            \\\"\\n            label=\\\"Option\\\"\\n          >\\n            <el-select\\n              v-model=\\\"a_form_item.option.type\\\"\\n              class=\\\"halfSelect\\\"\\n              placeholder=\\\"please select\\\"\\n            >\\n              <el-option\\n                v-for=\\\"item in options_details['audio'][a_form_item.type]\\\"\\n                :key=\\\"item\\\"\\n                :label=\\\"item\\\"\\n                :value=\\\"item\\\"\\n              />\\n            </el-select>\\n            --\\n            <el-input\\n              v-model=\\\"a_form_item.option.value\\\"\\n              placeholder=\\\"num\\\"\\n              class=\\\"halfInput\\\"\\n              type=\\\"text\\\"\\n            />\\n          </el-form-item>\\n          <el-form-item v-if=\\\"a_form_item.type == 'volume'\\\" label=\\\"Volume\\\">\\n            <el-input\\n              v-model=\\\"a_form_item.option.value\\\"\\n              placeholder=\\\"0 to 1\\\"\\n              type=\\\"text\\\"\\n            />\\n          </el-form-item>\\n          <el-form-item v-if=\\\"a_form_item.type == 'lowpass'\\\" label=\\\"Lowpass\\\">\\n            <el-input\\n              v-model=\\\"a_form_item.option.value\\\"\\n              placeholder=\\\"eg. 500\\\"\\n              type=\\\"text\\\"\\n            />\\n          </el-form-item>\\n          <el-form-item>\\n            <el-button type=\\\"success\\\" class=\\\"addButton\\\" plain>Add</el-button>\\n          </el-form-item>\\n        </el-form> \"), _createVNode(_component_el_form, {\n      model: $setup.v_form_item,\n      \"label-width\": \"90px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"Modality\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.v_form_item.modality,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.v_form_item.modality = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio, {\n            label: \"audio\"\n          }), _createVNode(_component_el_radio, {\n            label: \"video\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Start time\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.start,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.v_form_item.start = $event),\n          placeholder: \"Please input start time\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"End time\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.end,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.v_form_item.end = $event),\n          placeholder: \"Please input end time\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Type\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.v_form_item.type,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.v_form_item.type = $event),\n          placeholder: \"please select your zone\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.options_details['video']['type'], item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item,\n              label: item,\n              value: item\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $setup.v_form_item.type == 'impulse_value' || $setup.v_form_item.type == 'gblur' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"Option\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.value,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.v_form_item.option.value = $event),\n          placeholder: \"> 0\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.v_form_item.type == 'avgblur' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"Option\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.avgblur[0],\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.v_form_item.option.avgblur[0] = $event),\n          placeholder: \"> 0\",\n          type: \"text\",\n          class: \"optionHalfInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\"- \"), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.avgblur[1],\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.v_form_item.option.avgblur[1] = $event),\n          placeholder: \"> 0\",\n          type: \"text\",\n          class: \"optionHalfInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"Option\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.avgblur[0],\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.v_form_item.option.avgblur[0] = $event),\n          placeholder: \"contrast\",\n          type: \"text\",\n          class: \"optionThirdInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\"- \"), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.avgblur[1],\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.v_form_item.option.avgblur[1] = $event),\n          placeholder: \"brightness\",\n          type: \"text\",\n          class: \"optionThirdInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\" - \"), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.avgblur[2],\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.v_form_item.option.avgblur[2] = $event),\n          placeholder: \"saturation\",\n          type: \"text\",\n          class: \"optionThirdInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.avgblur[3],\n          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.v_form_item.option.avgblur[3] = $event),\n          placeholder: \"gamma_r\",\n          type: \"text\",\n          style: {\n            \"margin-top\": \"5px\"\n          },\n          class: \"optionThirdInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\"- \"), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.avgblur[4],\n          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.v_form_item.option.avgblur[4] = $event),\n          placeholder: \"gamma_g\",\n          type: \"text\",\n          style: {\n            \"margin-top\": \"5px\"\n          },\n          class: \"optionThirdInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\" - \"), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.avgblur[5],\n          \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.v_form_item.option.avgblur[5] = $event),\n          placeholder: \"gamma_b\",\n          type: \"text\",\n          style: {\n            \"margin-top\": \"5px\"\n          },\n          class: \"optionThirdInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $setup.v_form_item.type == 'occlusion' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"Option\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.occlusion[0],\n          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.v_form_item.option.occlusion[0] = $event),\n          placeholder: \"x\",\n          type: \"text\",\n          class: \"optionHalfInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\"- \"), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.occlusion[1],\n          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.v_form_item.option.occlusion[1] = $event),\n          placeholder: \"y\",\n          type: \"text\",\n          class: \"optionHalfInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.occlusion[2],\n          \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $setup.v_form_item.option.occlusion[2] = $event),\n          placeholder: \"w\",\n          type: \"text\",\n          class: \"optionHalfInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\"- \"), _createVNode(_component_el_input, {\n          modelValue: $setup.v_form_item.option.occlusion[3],\n          \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $setup.v_form_item.option.occlusion[3] = $event),\n          placeholder: \"h\",\n          type: \"text\",\n          class: \"optionHalfInput\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.v_form_item.type == 'color_channel_swapping' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 3,\n        label: \"Option\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.v_form_item.option.color_channel_swapping[0],\n          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $setup.v_form_item.option.color_channel_swapping[0] = $event),\n          class: \"optionHalfInput\",\n          placeholder: \"[r,g,b]\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.options_details['video']['color_channel_swapping'], item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item,\n              label: item,\n              value: item\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\"- \"), _createVNode(_component_el_select, {\n          modelValue: $setup.v_form_item.option.color_channel_swapping[1],\n          \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $setup.v_form_item.option.color_channel_swapping[1] = $event),\n          class: \"optionHalfInput\",\n          placeholder: \"[r,g,b]\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.options_details['video']['color_channel_swapping'], item => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: item,\n              label: item,\n              value: item\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"success\",\n          class: \"addButton\",\n          plain: \"\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Add\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","shadow","_createElementVNode","_hoisted_2","_createCommentVNode","_component_el_form","model","$setup","_component_el_form_item","label","_component_el_radio_group","modality","_component_el_radio","_component_el_input","start","placeholder","type","end","_component_el_select","_Fragment","item","_createBlock","_component_el_option","key","value","option","avgblur","style","occlusion","color_channel_swapping","_component_el_button","plain"],"sourceRoot":"","sources":["/home/zhangbaozheng/emotional/Robust-MSA/vue3/src/components/AddNoise.vue"],"sourcesContent":["<template>\n  <div class=\"addNoiseContainer\">\n    <el-card shadow=\"always\" class=\"methodContent fromMethod\">\n      <div class=\"methodContainer\">\n        <!-- <el-form :model=\"a_form_item\" label-width=\"90px\">\n          <el-form-item label=\"Modality\">\n            <el-radio-group v-model=\"a_form_item.modality\">\n              <el-radio label=\"audio\" />\n              <el-radio label=\"video\" />\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Start time\">\n            <el-input\n              v-model=\"a_form_item.start\"\n              placeholder=\"Please input start time\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item label=\"End time\">\n            <el-input\n              v-model=\"a_form_item.end\"\n              placeholder=\"Please input end time\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item label=\"Type\">\n            <el-select\n              v-model=\"a_form_item.type\"\n              placeholder=\"please select your zone\"\n            >\n              <el-option\n                v-for=\"item in options_details['audio']['type']\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item\n            v-if=\"\n              !(\n                a_form_item.type == 'volume' ||\n                a_form_item.type == 'mute' ||\n                a_form_item.type == 'lowpass'\n              )\n            \"\n            label=\"Option\"\n          >\n            <el-select\n              v-model=\"a_form_item.option.type\"\n              class=\"halfSelect\"\n              placeholder=\"please select\"\n            >\n              <el-option\n                v-for=\"item in options_details['audio'][a_form_item.type]\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              />\n            </el-select>\n            --\n            <el-input\n              v-model=\"a_form_item.option.value\"\n              placeholder=\"num\"\n              class=\"halfInput\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item v-if=\"a_form_item.type == 'volume'\" label=\"Volume\">\n            <el-input\n              v-model=\"a_form_item.option.value\"\n              placeholder=\"0 to 1\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item v-if=\"a_form_item.type == 'lowpass'\" label=\"Lowpass\">\n            <el-input\n              v-model=\"a_form_item.option.value\"\n              placeholder=\"eg. 500\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"success\" class=\"addButton\" plain>Add</el-button>\n          </el-form-item>\n        </el-form> -->\n        <el-form :model=\"v_form_item\" label-width=\"90px\">\n          <el-form-item label=\"Modality\">\n            <el-radio-group v-model=\"v_form_item.modality\">\n              <el-radio label=\"audio\" />\n              <el-radio label=\"video\" />\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Start time\">\n            <el-input\n              v-model=\"v_form_item.start\"\n              placeholder=\"Please input start time\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item label=\"End time\">\n            <el-input\n              v-model=\"v_form_item.end\"\n              placeholder=\"Please input end time\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item label=\"Type\">\n            <el-select\n              v-model=\"v_form_item.type\"\n              placeholder=\"please select your zone\"\n            >\n              <el-option\n                v-for=\"item in options_details['video']['type']\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item v-if=\"(v_form_item.type == 'impulse_value') || v_form_item.type == 'gblur'\" label=\"Option\">\n            <el-input\n              v-model=\"v_form_item.option.value\"\n              placeholder=\"> 0\"\n              type=\"text\"\n            />\n          </el-form-item>\n          <el-form-item v-if=\"v_form_item.type == 'avgblur'\" label=\"Option\">\n            <el-input\n              v-model=\"v_form_item.option.avgblur[0]\"\n              placeholder=\"> 0\"\n              type=\"text\"\n              class=\"optionHalfInput\"\n            />-\n            <el-input\n              v-model=\"v_form_item.option.avgblur[1]\"\n              placeholder=\"> 0\"\n              type=\"text\"\n              class=\"optionHalfInput\"\n            />\n          </el-form-item>\n          <el-form-item label=\"Option\">\n            <el-input\n              v-model=\"v_form_item.option.avgblur[0]\"\n              placeholder=\"contrast\"\n              type=\"text\"\n              class=\"optionThirdInput\"\n            />-\n            <el-input\n              v-model=\"v_form_item.option.avgblur[1]\"\n              placeholder=\"brightness\"\n              type=\"text\"\n              class=\"optionThirdInput\"\n            />\n            -\n            <el-input\n              v-model=\"v_form_item.option.avgblur[2]\"\n              placeholder=\"saturation\"\n              type=\"text\"\n              class=\"optionThirdInput\"\n            />\n            <el-input\n              v-model=\"v_form_item.option.avgblur[3]\"\n              placeholder=\"gamma_r\"\n              type=\"text\"\n              style=\"margin-top: 5px;\"\n              class=\"optionThirdInput\"\n            />-\n            <el-input\n              v-model=\"v_form_item.option.avgblur[4]\"\n              placeholder=\"gamma_g\"\n              type=\"text\"\n              style=\"margin-top: 5px;\"\n              class=\"optionThirdInput\"\n            />\n            -\n            <el-input\n              v-model=\"v_form_item.option.avgblur[5]\"\n              placeholder=\"gamma_b\"\n              type=\"text\"\n              style=\"margin-top: 5px;\"\n              class=\"optionThirdInput\"\n            />\n          </el-form-item>\n          <el-form-item v-if=\"v_form_item.type == 'occlusion'\" label=\"Option\">\n            <el-input\n              v-model=\"v_form_item.option.occlusion[0]\"\n              placeholder=\"x\"\n              type=\"text\"\n              class=\"optionHalfInput\"\n            />-\n            <el-input\n              v-model=\"v_form_item.option.occlusion[1]\"\n              placeholder=\"y\"\n              type=\"text\"\n              class=\"optionHalfInput\"\n            />\n            <el-input\n              v-model=\"v_form_item.option.occlusion[2]\"\n              placeholder=\"w\"\n              type=\"text\"\n              class=\"optionHalfInput\"\n            />-\n            <el-input\n              v-model=\"v_form_item.option.occlusion[3]\"\n              placeholder=\"h\"\n              type=\"text\"\n              class=\"optionHalfInput\"\n            />\n          </el-form-item>\n          <el-form-item v-if=\"v_form_item.type == 'color_channel_swapping'\" label=\"Option\">\n            <el-select\n              v-model=\"v_form_item.option.color_channel_swapping[0]\"\n              class=\"optionHalfInput\"\n              placeholder=\"[r,g,b]\"\n            >\n              <el-option\n                v-for=\"item in options_details['video']['color_channel_swapping']\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              />\n            </el-select>-\n            <el-select\n              v-model=\"v_form_item.option.color_channel_swapping[1]\"\n              class=\"optionHalfInput\"\n              placeholder=\"[r,g,b]\"\n            >\n              <el-option\n                v-for=\"item in options_details['video']['color_channel_swapping']\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"success\" class=\"addButton\" plain>Add</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n  </div>\n</template>\n  \n<script setup>\nimport { ref } from \"vue\";\nconst a_form_item = ref({\n  modality: \"audio\",\n  type: \"\",\n  start: \"\",\n  end: \"\",\n  option: {\n    type: [],\n    value: \"\",\n  },\n});\nconst v_form_item = ref({\n  modality: \"video\",\n  type: \"\",\n  start: \"\",\n  end: \"\",\n  option: {\n    color_channel_swapping: [,],\n    avgblur:[,],\n    gblur:'',\n    impulse_value:'',\n    occlusion:[, , ,],\n    color:[,,,,,],\n  },\n});\nconst options_details = ref({\n  audio: {\n    coloran: [\n      \"white\",\n      \"pink\",\n      \"brown\",\n      \"blue\",\n      \"violet\",\n      \"grey\",\n      \"brown\",\n      \"violet\",\n    ],\n    background: [\n      \"random\",\n      \"metro\",\n      \"office\",\n      \"park\",\n      \"restaurant\",\n      \"traffic\",\n      \"white\",\n      \"music_soothing\",\n      \"music_tense\",\n      \"song_gentle\",\n      \"song_rock\",\n    ],\n    sudden: [\"random\", \"beep\", \"glass\", \"thunder\", \"dog\"],\n    reverb: [\"hall\", \"room\"],\n    others_required: [\"volume\"],\n    no_required: [\"mute\"],\n    type: [\n      \"mute\",\n      \"volume\",\n      \"lowpass\",\n      \"reverb\",\n      \"sudden\",\n      \"background\",\n      \"coloran\",\n    ],\n  },\n  video: {\n    color_channel_swapping:['r','g','b'],\n    type: [\n      \"blank\",\n      \"avgblur\",\n      \"gblur\",\n      \"impulse_value\",\n      \"occlusion\",\n      \"color\",\n      \"color_channel_swapping\",\n      \"color_inversion\",\n    ],\n    no_required: [\"blank\", \"color_inversion\"],\n  },\n});\n</script>\n  \n<style scoped>\n.methodContent {\n  width: 320px;\n  overflow: hidden;\n  margin-top: 10px;\n}\n\n.fromMethod {\n  height: auto;\n}\n\n.fromMethod .el-form-item {\n  margin-bottom: 10px;\n}\n\n.halfSelect {\n  width: 140px;\n}\n.halfInput {\n  width: 57px;\n}\n.addButton {\n  width: 100%;\n}\n\n.optionHalfInput{\n  width: 100px;\n}\n.optionThirdInput{\n  width: 65.3px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}