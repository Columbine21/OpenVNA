{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*!\n * wavesurfer.js timeline plugin 6.4.0 (2022-11-05)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"WaveSurfer\", [], factory);else if (typeof exports === 'object') exports[\"WaveSurfer\"] = factory();else root[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"timeline\"] = factory();\n})(self, () => {\n  return (/******/(() => {\n      // webpackBootstrap\n      /******/\n      \"use strict\";\n\n      /******/\n      var __webpack_modules__ = {\n        /***/\"./src/plugin/timeline/index.js\":\n        /*!**************************************!*\\\n          !*** ./src/plugin/timeline/index.js ***!\n          \\**************************************/\n        /***/\n        (module, exports) => {\n          Object.defineProperty(exports, \"__esModule\", {\n            value: true\n          });\n          exports[\"default\"] = void 0;\n          function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n              throw new TypeError(\"Cannot call a class as a function\");\n            }\n          }\n          function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n          function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            Object.defineProperty(Constructor, \"prototype\", {\n              writable: false\n            });\n            return Constructor;\n          }\n          function _defineProperty(obj, key, value) {\n            if (key in obj) {\n              Object.defineProperty(obj, key, {\n                value: value,\n                enumerable: true,\n                configurable: true,\n                writable: true\n              });\n            } else {\n              obj[key] = value;\n            }\n            return obj;\n          }\n          /**\n           * @typedef {Object} TimelinePluginParams\n           * @desc Extends the `WavesurferParams` wavesurfer was initialised with\n           * @property {!string|HTMLElement} container CSS selector or HTML element where\n           * the timeline should be drawn. This is the only required parameter.\n           * @property {number} notchPercentHeight=90 Height of notches in percent\n           * @property {string} unlabeledNotchColor='#c0c0c0' The colour of the notches\n           * that do not have labels\n           * @property {string} primaryColor='#000' The colour of the main notches\n           * @property {string} secondaryColor='#c0c0c0' The colour of the secondary\n           * notches\n           * @property {string} primaryFontColor='#000' The colour of the labels next to\n           * the main notches\n           * @property {string} secondaryFontColor='#000' The colour of the labels next to\n           * the secondary notches\n           * @property {number} labelPadding=5 The padding between the label and the notch\n           * @property {?number} zoomDebounce A debounce timeout to increase rendering\n           * performance for large files\n           * @property {string} fontFamily='Arial'\n           * @property {number} fontSize=10 Font size of labels in pixels\n           * @property {?number} duration Length of the track in seconds. Overrides\n           * getDuration() for setting length of timeline\n           * @property {function} formatTimeCallback (sec, pxPerSec) -> label\n           * @property {function} timeInterval (pxPerSec) -> seconds between notches\n           * @property {function} primaryLabelInterval (pxPerSec) -> cadence between\n           * labels in primary color\n           * @property {function} secondaryLabelInterval (pxPerSec) -> cadence between\n           * labels in secondary color\n           * @property {?number} offset Offset for the timeline start in seconds. May also be\n           * negative.\n           * @property {?boolean} deferInit Set to true to manually call\n           * `initPlugin('timeline')`\n           */\n          /**\n           * Adds a timeline to the waveform.\n           *\n           * @implements {PluginClass}\n           * @extends {Observer}\n           * @example\n           * // es6\n           * import TimelinePlugin from 'wavesurfer.timeline.js';\n           *\n           * // commonjs\n           * var TimelinePlugin = require('wavesurfer.timeline.js');\n           *\n           * // if you are using <script> tags\n           * var TimelinePlugin = window.WaveSurfer.timeline;\n           *\n           * // ... initialising wavesurfer with the plugin\n           * var wavesurfer = WaveSurfer.create({\n           *   // wavesurfer options ...\n           *   plugins: [\n           *     TimelinePlugin.create({\n           *       // plugin options ...\n           *     })\n           *   ]\n           * });\n           */\n          var TimelinePlugin = /*#__PURE__*/function () {\n            /**\n             * Creates an instance of TimelinePlugin.\n             *\n             * You probably want to use TimelinePlugin.create()\n             *\n             * @param {TimelinePluginParams} params Plugin parameters\n             * @param {object} ws Wavesurfer instance\n             */\n            function TimelinePlugin(params, _ws) {\n              var _this = this;\n              _classCallCheck(this, TimelinePlugin);\n              _defineProperty(this, \"_onScroll\", function () {\n                if (_this.wrapper && _this.drawer.wrapper) {\n                  _this.wrapper.scrollLeft = _this.drawer.wrapper.scrollLeft;\n                }\n              });\n              _defineProperty(this, \"_onRedraw\", function () {\n                return _this.render();\n              });\n              _defineProperty(this, \"_onReady\", function () {\n                var ws = _this.wavesurfer;\n                _this.drawer = ws.drawer;\n                _this.pixelRatio = ws.drawer.params.pixelRatio;\n                _this.maxCanvasWidth = ws.drawer.maxCanvasWidth || ws.drawer.width;\n                _this.maxCanvasElementWidth = ws.drawer.maxCanvasElementWidth || Math.round(_this.maxCanvasWidth / _this.pixelRatio);\n\n                // add listeners\n                ws.drawer.wrapper.addEventListener('scroll', _this._onScroll);\n                ws.on('redraw', _this._onRedraw);\n                ws.on('zoom', _this._onZoom);\n                _this.render();\n              });\n              _defineProperty(this, \"_onWrapperClick\", function (e) {\n                e.preventDefault();\n                var relX = 'offsetX' in e ? e.offsetX : e.layerX;\n                _this.fireEvent('click', relX / _this.wrapper.scrollWidth || 0);\n              });\n              this.container = 'string' == typeof params.container ? document.querySelector(params.container) : params.container;\n              if (!this.container) {\n                throw new Error('No container for wavesurfer timeline');\n              }\n              this.wavesurfer = _ws;\n              this.util = _ws.util;\n              this.params = Object.assign({}, {\n                height: 20,\n                notchPercentHeight: 90,\n                labelPadding: 5,\n                unlabeledNotchColor: '#c0c0c0',\n                primaryColor: '#000',\n                secondaryColor: '#c0c0c0',\n                primaryFontColor: '#000',\n                secondaryFontColor: '#000',\n                fontFamily: 'Arial',\n                fontSize: 10,\n                duration: null,\n                zoomDebounce: false,\n                formatTimeCallback: this.defaultFormatTimeCallback,\n                timeInterval: this.defaultTimeInterval,\n                primaryLabelInterval: this.defaultPrimaryLabelInterval,\n                secondaryLabelInterval: this.defaultSecondaryLabelInterval,\n                offset: 0\n              }, params);\n              this.canvases = [];\n              this.wrapper = null;\n              this.drawer = null;\n              this.pixelRatio = null;\n              this.maxCanvasWidth = null;\n              this.maxCanvasElementWidth = null;\n              /**\n               * This event handler has to be in the constructor function because it\n               * relies on the debounce function which is only available after\n               * instantiation\n               *\n               * Use a debounced function if `params.zoomDebounce` is defined\n               *\n               * @returns {void}\n               */\n              this._onZoom = this.params.zoomDebounce ? this.wavesurfer.util.debounce(function () {\n                return _this.render();\n              }, this.params.zoomDebounce) : function () {\n                return _this.render();\n              };\n            }\n\n            /**\n             * Initialisation function used by the plugin API\n             */\n            _createClass(TimelinePlugin, [{\n              key: \"init\",\n              value: function init() {\n                // Check if ws is ready\n                if (this.wavesurfer.isReady) {\n                  this._onReady();\n                } else {\n                  this.wavesurfer.once('ready', this._onReady);\n                }\n              }\n\n              /**\n               * Destroy function used by the plugin API\n               */\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.unAll();\n                this.wavesurfer.un('redraw', this._onRedraw);\n                this.wavesurfer.un('zoom', this._onZoom);\n                this.wavesurfer.un('ready', this._onReady);\n                this.wavesurfer.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n                if (this.wrapper && this.wrapper.parentNode) {\n                  this.wrapper.removeEventListener('click', this._onWrapperClick);\n                  this.wrapper.parentNode.removeChild(this.wrapper);\n                  this.wrapper = null;\n                }\n              }\n\n              /**\n               * Create a timeline element to wrap the canvases drawn by this plugin\n               *\n               */\n            }, {\n              key: \"createWrapper\",\n              value: function createWrapper() {\n                var wsParams = this.wavesurfer.params;\n                this.container.innerHTML = '';\n                this.wrapper = this.container.appendChild(document.createElement('timeline'));\n                this.util.style(this.wrapper, {\n                  display: 'block',\n                  position: 'relative',\n                  userSelect: 'none',\n                  webkitUserSelect: 'none',\n                  height: \"\".concat(this.params.height, \"px\")\n                });\n                if (wsParams.fillParent || wsParams.scrollParent) {\n                  this.util.style(this.wrapper, {\n                    width: '100%',\n                    overflowX: 'hidden',\n                    overflowY: 'hidden'\n                  });\n                }\n                this.wrapper.addEventListener('click', this._onWrapperClick);\n              }\n\n              /**\n               * Render the timeline (also updates the already rendered timeline)\n               *\n               */\n            }, {\n              key: \"render\",\n              value: function render() {\n                if (!this.wrapper) {\n                  this.createWrapper();\n                }\n                this.updateCanvases();\n                this.updateCanvasesPositioning();\n                this.renderCanvases();\n              }\n\n              /**\n               * Add new timeline canvas\n               *\n               */\n            }, {\n              key: \"addCanvas\",\n              value: function addCanvas() {\n                var canvas = this.wrapper.appendChild(document.createElement('canvas'));\n                this.canvases.push(canvas);\n                this.util.style(canvas, {\n                  position: 'absolute',\n                  zIndex: 4\n                });\n              }\n\n              /**\n               * Remove timeline canvas\n               *\n               */\n            }, {\n              key: \"removeCanvas\",\n              value: function removeCanvas() {\n                var canvas = this.canvases.pop();\n                canvas.parentElement.removeChild(canvas);\n              }\n\n              /**\n               * Make sure the correct of timeline canvas elements exist and are cached in\n               * this.canvases\n               *\n               */\n            }, {\n              key: \"updateCanvases\",\n              value: function updateCanvases() {\n                var totalWidth = Math.round(this.drawer.wrapper.scrollWidth);\n                var requiredCanvases = Math.ceil(totalWidth / this.maxCanvasElementWidth);\n                while (this.canvases.length < requiredCanvases) {\n                  this.addCanvas();\n                }\n                while (this.canvases.length > requiredCanvases) {\n                  this.removeCanvas();\n                }\n              }\n\n              /**\n               * Update the dimensions and positioning style for all the timeline canvases\n               *\n               */\n            }, {\n              key: \"updateCanvasesPositioning\",\n              value: function updateCanvasesPositioning() {\n                var _this2 = this;\n                // cache length for performance\n                var canvasesLength = this.canvases.length;\n                this.canvases.forEach(function (canvas, i) {\n                  // canvas width is the max element width, or if it is the last the\n                  // required width\n                  var canvasWidth = i === canvasesLength - 1 ? _this2.drawer.wrapper.scrollWidth - _this2.maxCanvasElementWidth * (canvasesLength - 1) : _this2.maxCanvasElementWidth;\n                  // set dimensions and style\n                  canvas.width = canvasWidth * _this2.pixelRatio;\n                  // on certain pixel ratios the canvas appears cut off at the bottom,\n                  // therefore leave 1px extra\n                  canvas.height = (_this2.params.height + 1) * _this2.pixelRatio;\n                  _this2.util.style(canvas, {\n                    width: \"\".concat(canvasWidth, \"px\"),\n                    height: \"\".concat(_this2.params.height, \"px\"),\n                    left: \"\".concat(i * _this2.maxCanvasElementWidth, \"px\")\n                  });\n                });\n              }\n\n              /**\n               * Render the timeline labels and notches\n               *\n               */\n            }, {\n              key: \"renderCanvases\",\n              value: function renderCanvases() {\n                var _this3 = this;\n                var duration = this.params.duration || this.wavesurfer.backend.getDuration();\n                if (duration <= 0) {\n                  return;\n                }\n                var wsParams = this.wavesurfer.params;\n                var fontSize = this.params.fontSize * wsParams.pixelRatio;\n                var totalSeconds = parseInt(duration, 10) + 1;\n                var width = wsParams.fillParent && !wsParams.scrollParent ? this.drawer.getWidth() : this.drawer.wrapper.scrollWidth * wsParams.pixelRatio;\n                var height1 = this.params.height * this.pixelRatio;\n                var height2 = this.params.height * (this.params.notchPercentHeight / 100) * this.pixelRatio;\n                var pixelsPerSecond = width / duration;\n                var formatTime = this.params.formatTimeCallback;\n                // if parameter is function, call the function with\n                // pixelsPerSecond, otherwise simply take the value as-is\n                var intervalFnOrVal = function intervalFnOrVal(option) {\n                  return typeof option === 'function' ? option(pixelsPerSecond) : option;\n                };\n                var timeInterval = intervalFnOrVal(this.params.timeInterval);\n                var primaryLabelInterval = intervalFnOrVal(this.params.primaryLabelInterval);\n                var secondaryLabelInterval = intervalFnOrVal(this.params.secondaryLabelInterval);\n                var curPixel = pixelsPerSecond * this.params.offset;\n                var curSeconds = 0;\n                var i;\n                // build an array of position data with index, second and pixel data,\n                // this is then used multiple times below\n                var positioning = [];\n\n                // render until end in case we have a negative offset\n                var renderSeconds = this.params.offset < 0 ? totalSeconds - this.params.offset : totalSeconds;\n                for (i = 0; i < renderSeconds / timeInterval; i++) {\n                  positioning.push([i, curSeconds, curPixel]);\n                  curSeconds += timeInterval;\n                  curPixel += pixelsPerSecond * timeInterval;\n                }\n\n                // iterate over each position\n                var renderPositions = function renderPositions(cb) {\n                  positioning.forEach(function (pos) {\n                    cb(pos[0], pos[1], pos[2]);\n                  });\n                };\n\n                // render primary labels\n                this.setFillStyles(this.params.primaryColor);\n                this.setFonts(\"\".concat(fontSize, \"px \").concat(this.params.fontFamily));\n                this.setFillStyles(this.params.primaryFontColor);\n                renderPositions(function (i, curSeconds, curPixel) {\n                  if (i % primaryLabelInterval === 0) {\n                    _this3.fillRect(curPixel, 0, 1, height1);\n                    _this3.fillText(formatTime(curSeconds, pixelsPerSecond), curPixel + _this3.params.labelPadding * _this3.pixelRatio, height1);\n                  }\n                });\n\n                // render secondary labels\n                this.setFillStyles(this.params.secondaryColor);\n                this.setFonts(\"\".concat(fontSize, \"px \").concat(this.params.fontFamily));\n                this.setFillStyles(this.params.secondaryFontColor);\n                renderPositions(function (i, curSeconds, curPixel) {\n                  if (i % secondaryLabelInterval === 0) {\n                    _this3.fillRect(curPixel, 0, 1, height1);\n                    _this3.fillText(formatTime(curSeconds, pixelsPerSecond), curPixel + _this3.params.labelPadding * _this3.pixelRatio, height1);\n                  }\n                });\n\n                // render the actual notches (when no labels are used)\n                this.setFillStyles(this.params.unlabeledNotchColor);\n                renderPositions(function (i, curSeconds, curPixel) {\n                  if (i % secondaryLabelInterval !== 0 && i % primaryLabelInterval !== 0) {\n                    _this3.fillRect(curPixel, 0, 1, height2);\n                  }\n                });\n              }\n\n              /**\n               * Set the canvas fill style\n               *\n               * @param {DOMString|CanvasGradient|CanvasPattern} fillStyle Fill style to\n               * use\n               */\n            }, {\n              key: \"setFillStyles\",\n              value: function setFillStyles(fillStyle) {\n                this.canvases.forEach(function (canvas) {\n                  var context = canvas.getContext('2d');\n                  if (context) {\n                    context.fillStyle = fillStyle;\n                  }\n                });\n              }\n\n              /**\n               * Set the canvas font\n               *\n               * @param {DOMString} font Font to use\n               */\n            }, {\n              key: \"setFonts\",\n              value: function setFonts(font) {\n                this.canvases.forEach(function (canvas) {\n                  var context = canvas.getContext('2d');\n                  if (context) {\n                    context.font = font;\n                  }\n                });\n              }\n\n              /**\n               * Draw a rectangle on the canvases\n               *\n               * (it figures out the offset for each canvas)\n               *\n               * @param {number} x X-position\n               * @param {number} y Y-position\n               * @param {number} width Width\n               * @param {number} height Height\n               */\n            }, {\n              key: \"fillRect\",\n              value: function fillRect(x, y, width, height) {\n                var _this4 = this;\n                this.canvases.forEach(function (canvas, i) {\n                  var leftOffset = i * _this4.maxCanvasWidth;\n                  var intersection = {\n                    x1: Math.max(x, i * _this4.maxCanvasWidth),\n                    y1: y,\n                    x2: Math.min(x + width, i * _this4.maxCanvasWidth + canvas.width),\n                    y2: y + height\n                  };\n                  if (intersection.x1 < intersection.x2) {\n                    var context = canvas.getContext('2d');\n                    if (context) {\n                      context.fillRect(intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1);\n                    }\n                  }\n                });\n              }\n\n              /**\n               * Fill a given text on the canvases\n               *\n               * @param {string} text Text to render\n               * @param {number} x X-position\n               * @param {number} y Y-position\n               */\n            }, {\n              key: \"fillText\",\n              value: function fillText(text, x, y) {\n                var textWidth;\n                var xOffset = 0;\n                this.canvases.forEach(function (canvas) {\n                  var context = canvas.getContext('2d');\n                  if (context) {\n                    var canvasWidth = context.canvas.width;\n                    if (xOffset > x + textWidth) {\n                      return;\n                    }\n                    if (xOffset + canvasWidth > x && context) {\n                      textWidth = context.measureText(text).width;\n                      context.fillText(text, x - xOffset, y);\n                    }\n                    xOffset += canvasWidth;\n                  }\n                });\n              }\n\n              /**\n               * Turn the time into a suitable label for the time.\n               *\n               * @param {number} seconds Seconds to format\n               * @param {number} pxPerSec Pixels per second\n               * @returns {number} Time\n               */\n            }, {\n              key: \"defaultFormatTimeCallback\",\n              value: function defaultFormatTimeCallback(seconds, pxPerSec) {\n                if (seconds / 60 > 1) {\n                  // calculate minutes and seconds from seconds count\n                  var minutes = parseInt(seconds / 60, 10);\n                  seconds = parseInt(seconds % 60, 10);\n                  // fill up seconds with zeroes\n                  seconds = seconds < 10 ? '0' + seconds : seconds;\n                  return \"\".concat(minutes, \":\").concat(seconds);\n                }\n                return Math.round(seconds * 1000) / 1000;\n              }\n\n              /**\n               * Return how many seconds should be between each notch\n               *\n               * @param {number} pxPerSec Pixels per second\n               * @returns {number} Time\n               */\n            }, {\n              key: \"defaultTimeInterval\",\n              value: function defaultTimeInterval(pxPerSec) {\n                if (pxPerSec >= 25) {\n                  return 1;\n                } else if (pxPerSec * 5 >= 25) {\n                  return 5;\n                } else if (pxPerSec * 15 >= 25) {\n                  return 15;\n                }\n                return Math.ceil(0.5 / pxPerSec) * 60;\n              }\n\n              /**\n               * Return the cadence of notches that get labels in the primary color.\n               *\n               * @param {number} pxPerSec Pixels per second\n               * @returns {number} Cadence\n               */\n            }, {\n              key: \"defaultPrimaryLabelInterval\",\n              value: function defaultPrimaryLabelInterval(pxPerSec) {\n                if (pxPerSec >= 25) {\n                  return 10;\n                } else if (pxPerSec * 5 >= 25) {\n                  return 6;\n                } else if (pxPerSec * 15 >= 25) {\n                  return 4;\n                }\n                return 4;\n              }\n\n              /**\n               * Return the cadence of notches that get labels in the secondary color.\n               *\n               * @param {number} pxPerSec Pixels per second\n               * @returns {number} Cadence\n               */\n            }, {\n              key: \"defaultSecondaryLabelInterval\",\n              value: function defaultSecondaryLabelInterval(pxPerSec) {\n                if (pxPerSec >= 25) {\n                  return 5;\n                } else if (pxPerSec * 5 >= 25) {\n                  return 2;\n                } else if (pxPerSec * 15 >= 25) {\n                  return 2;\n                }\n                return 2;\n              }\n            }], [{\n              key: \"create\",\n              value:\n              /**\n               * Timeline plugin definition factory\n               *\n               * This function must be used to create a plugin definition which can be\n               * used by wavesurfer to correctly instantiate the plugin.\n               *\n               * @param  {TimelinePluginParams} params parameters use to initialise the plugin\n               * @return {PluginDefinition} an object representing the plugin\n               */\n              function create(params) {\n                return {\n                  name: 'timeline',\n                  deferInit: params && params.deferInit ? params.deferInit : false,\n                  params: params,\n                  instance: TimelinePlugin\n                };\n              }\n\n              // event handlers\n            }]);\n\n            return TimelinePlugin;\n          }();\n          exports[\"default\"] = TimelinePlugin;\n          module.exports = exports.default;\n\n          /***/\n        }\n\n        /******/\n      };\n      /************************************************************************/\n      /******/ // The module cache\n      /******/\n      var __webpack_module_cache__ = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/ // Check if module is in cache\n        /******/var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n        if (cachedModule !== undefined) {\n          /******/return cachedModule.exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/ // no module.id needed\n          /******/ // no module.loaded needed\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /************************************************************************/\n      /******/\n      /******/ // startup\n      /******/ // Load entry module and return exports\n      /******/ // This entry module is referenced by other modules so it can't be inlined\n      /******/\n      var __webpack_exports__ = __webpack_require__(\"./src/plugin/timeline/index.js\");\n      /******/\n      /******/\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});","map":{"version":3,"mappings":"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","names":["module","define","exports","root","TimelinePlugin","params","ws","_classCallCheck","_defineProperty","_this","wrapper","drawer","scrollLeft","render","wavesurfer","pixelRatio","maxCanvasWidth","width","maxCanvasElementWidth","Math","round","addEventListener","_onScroll","on","_onRedraw","_onZoom","e","preventDefault","relX","offsetX","layerX","fireEvent","scrollWidth","container","document","querySelector","Error","util","Object","assign","height","notchPercentHeight","labelPadding","unlabeledNotchColor","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","fontFamily","fontSize","duration","zoomDebounce","formatTimeCallback","defaultFormatTimeCallback","timeInterval","defaultTimeInterval","primaryLabelInterval","defaultPrimaryLabelInterval","secondaryLabelInterval","defaultSecondaryLabelInterval","offset","canvases","debounce","_createClass","key","value","isReady","_onReady","once","unAll","un","removeEventListener","parentNode","_onWrapperClick","removeChild","wsParams","innerHTML","appendChild","createElement","style","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","createWrapper","updateCanvases","updateCanvasesPositioning","renderCanvases","canvas","push","zIndex","pop","parentElement","totalWidth","requiredCanvases","ceil","length","addCanvas","removeCanvas","canvasesLength","forEach","i","canvasWidth","_this2","left","backend","getDuration","totalSeconds","parseInt","getWidth","height1","height2","pixelsPerSecond","formatTime","intervalFnOrVal","option","curPixel","curSeconds","positioning","renderSeconds","renderPositions","cb","pos","setFillStyles","setFonts","_this3","fillRect","fillText","fillStyle","context","getContext","font","x","y","leftOffset","_this4","intersection","x1","max","y1","x2","min","y2","text","textWidth","xOffset","measureText","seconds","pxPerSec","minutes","name","deferInit","instance","__webpack_modules__"],"sourceRoot":"","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/src/plugin/timeline/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"timeline\"] = factory();\n})(self, () => {\nreturn ","/**\n * @typedef {Object} TimelinePluginParams\n * @desc Extends the `WavesurferParams` wavesurfer was initialised with\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the timeline should be drawn. This is the only required parameter.\n * @property {number} notchPercentHeight=90 Height of notches in percent\n * @property {string} unlabeledNotchColor='#c0c0c0' The colour of the notches\n * that do not have labels\n * @property {string} primaryColor='#000' The colour of the main notches\n * @property {string} secondaryColor='#c0c0c0' The colour of the secondary\n * notches\n * @property {string} primaryFontColor='#000' The colour of the labels next to\n * the main notches\n * @property {string} secondaryFontColor='#000' The colour of the labels next to\n * the secondary notches\n * @property {number} labelPadding=5 The padding between the label and the notch\n * @property {?number} zoomDebounce A debounce timeout to increase rendering\n * performance for large files\n * @property {string} fontFamily='Arial'\n * @property {number} fontSize=10 Font size of labels in pixels\n * @property {?number} duration Length of the track in seconds. Overrides\n * getDuration() for setting length of timeline\n * @property {function} formatTimeCallback (sec, pxPerSec) -> label\n * @property {function} timeInterval (pxPerSec) -> seconds between notches\n * @property {function} primaryLabelInterval (pxPerSec) -> cadence between\n * labels in primary color\n * @property {function} secondaryLabelInterval (pxPerSec) -> cadence between\n * labels in secondary color\n * @property {?number} offset Offset for the timeline start in seconds. May also be\n * negative.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('timeline')`\n */\n\n/**\n * Adds a timeline to the waveform.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import TimelinePlugin from 'wavesurfer.timeline.js';\n *\n * // commonjs\n * var TimelinePlugin = require('wavesurfer.timeline.js');\n *\n * // if you are using <script> tags\n * var TimelinePlugin = window.WaveSurfer.timeline;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     TimelinePlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class TimelinePlugin {\n    /**\n     * Timeline plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {TimelinePluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'timeline',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            instance: TimelinePlugin\n        };\n    }\n\n    // event handlers\n    _onScroll = () => {\n        if (this.wrapper && this.drawer.wrapper) {\n            this.wrapper.scrollLeft = this.drawer.wrapper.scrollLeft;\n        }\n    };\n\n    /**\n     * @returns {void}\n     */\n    _onRedraw = () => this.render();\n\n    _onReady = () => {\n        const ws = this.wavesurfer;\n        this.drawer = ws.drawer;\n        this.pixelRatio = ws.drawer.params.pixelRatio;\n        this.maxCanvasWidth = ws.drawer.maxCanvasWidth || ws.drawer.width;\n        this.maxCanvasElementWidth =\n            ws.drawer.maxCanvasElementWidth ||\n            Math.round(this.maxCanvasWidth / this.pixelRatio);\n\n        // add listeners\n        ws.drawer.wrapper.addEventListener('scroll', this._onScroll);\n        ws.on('redraw', this._onRedraw);\n        ws.on('zoom', this._onZoom);\n\n        this.render();\n    };\n\n    /**\n     * @param {object} e Click event\n     */\n    _onWrapperClick = e => {\n        e.preventDefault();\n        const relX = 'offsetX' in e ? e.offsetX : e.layerX;\n        this.fireEvent('click', relX / this.wrapper.scrollWidth || 0);\n    };\n\n    /**\n     * Creates an instance of TimelinePlugin.\n     *\n     * You probably want to use TimelinePlugin.create()\n     *\n     * @param {TimelinePluginParams} params Plugin parameters\n     * @param {object} ws Wavesurfer instance\n     */\n    constructor(params, ws) {\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(params.container)\n                : params.container;\n\n        if (!this.container) {\n            throw new Error('No container for wavesurfer timeline');\n        }\n\n        this.wavesurfer = ws;\n        this.util = ws.util;\n        this.params = Object.assign(\n            {},\n            {\n                height: 20,\n                notchPercentHeight: 90,\n                labelPadding: 5,\n                unlabeledNotchColor: '#c0c0c0',\n                primaryColor: '#000',\n                secondaryColor: '#c0c0c0',\n                primaryFontColor: '#000',\n                secondaryFontColor: '#000',\n                fontFamily: 'Arial',\n                fontSize: 10,\n                duration: null,\n                zoomDebounce: false,\n                formatTimeCallback: this.defaultFormatTimeCallback,\n                timeInterval: this.defaultTimeInterval,\n                primaryLabelInterval: this.defaultPrimaryLabelInterval,\n                secondaryLabelInterval: this.defaultSecondaryLabelInterval,\n                offset: 0\n            },\n            params\n        );\n\n        this.canvases = [];\n        this.wrapper = null;\n        this.drawer = null;\n        this.pixelRatio = null;\n        this.maxCanvasWidth = null;\n        this.maxCanvasElementWidth = null;\n        /**\n         * This event handler has to be in the constructor function because it\n         * relies on the debounce function which is only available after\n         * instantiation\n         *\n         * Use a debounced function if `params.zoomDebounce` is defined\n         *\n         * @returns {void}\n         */\n        this._onZoom = this.params.zoomDebounce\n            ? this.wavesurfer.util.debounce(\n                () => this.render(),\n                this.params.zoomDebounce\n            )\n            : () => this.render();\n    }\n\n    /**\n     * Initialisation function used by the plugin API\n     */\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n        }\n    }\n\n    /**\n     * Destroy function used by the plugin API\n     */\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('redraw', this._onRedraw);\n        this.wavesurfer.un('zoom', this._onZoom);\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.drawer.wrapper.removeEventListener(\n            'scroll',\n            this._onScroll\n        );\n        if (this.wrapper && this.wrapper.parentNode) {\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    /**\n     * Create a timeline element to wrap the canvases drawn by this plugin\n     *\n     */\n    createWrapper() {\n        const wsParams = this.wavesurfer.params;\n        this.container.innerHTML = '';\n        this.wrapper = this.container.appendChild(\n            document.createElement('timeline')\n        );\n        this.util.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: `${this.params.height}px`\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.util.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.wrapper.addEventListener('click', this._onWrapperClick);\n    }\n\n    /**\n     * Render the timeline (also updates the already rendered timeline)\n     *\n     */\n    render() {\n        if (!this.wrapper) {\n            this.createWrapper();\n        }\n        this.updateCanvases();\n        this.updateCanvasesPositioning();\n        this.renderCanvases();\n    }\n\n    /**\n     * Add new timeline canvas\n     *\n     */\n    addCanvas() {\n        const canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        );\n        this.canvases.push(canvas);\n        this.util.style(canvas, {\n            position: 'absolute',\n            zIndex: 4\n        });\n    }\n\n    /**\n     * Remove timeline canvas\n     *\n     */\n    removeCanvas() {\n        const canvas = this.canvases.pop();\n        canvas.parentElement.removeChild(canvas);\n    }\n\n    /**\n     * Make sure the correct of timeline canvas elements exist and are cached in\n     * this.canvases\n     *\n     */\n    updateCanvases() {\n        const totalWidth = Math.round(this.drawer.wrapper.scrollWidth);\n        const requiredCanvases = Math.ceil(\n            totalWidth / this.maxCanvasElementWidth\n        );\n\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n    }\n\n    /**\n     * Update the dimensions and positioning style for all the timeline canvases\n     *\n     */\n    updateCanvasesPositioning() {\n        // cache length for performance\n        const canvasesLength = this.canvases.length;\n        this.canvases.forEach((canvas, i) => {\n            // canvas width is the max element width, or if it is the last the\n            // required width\n            const canvasWidth =\n                i === canvasesLength - 1\n                    ? this.drawer.wrapper.scrollWidth -\n                      this.maxCanvasElementWidth * (canvasesLength - 1)\n                    : this.maxCanvasElementWidth;\n            // set dimensions and style\n            canvas.width = canvasWidth * this.pixelRatio;\n            // on certain pixel ratios the canvas appears cut off at the bottom,\n            // therefore leave 1px extra\n            canvas.height = (this.params.height + 1) * this.pixelRatio;\n            this.util.style(canvas, {\n                width: `${canvasWidth}px`,\n                height: `${this.params.height}px`,\n                left: `${i * this.maxCanvasElementWidth}px`\n            });\n        });\n    }\n\n    /**\n     * Render the timeline labels and notches\n     *\n     */\n    renderCanvases() {\n        const duration =\n            this.params.duration ||\n            this.wavesurfer.backend.getDuration();\n\n        if (duration <= 0) {\n            return;\n        }\n        const wsParams = this.wavesurfer.params;\n        const fontSize = this.params.fontSize * wsParams.pixelRatio;\n        const totalSeconds = parseInt(duration, 10) + 1;\n        const width =\n            wsParams.fillParent && !wsParams.scrollParent\n                ? this.drawer.getWidth()\n                : this.drawer.wrapper.scrollWidth * wsParams.pixelRatio;\n        const height1 = this.params.height * this.pixelRatio;\n        const height2 =\n            this.params.height *\n            (this.params.notchPercentHeight / 100) *\n            this.pixelRatio;\n        const pixelsPerSecond = width / duration;\n\n        const formatTime = this.params.formatTimeCallback;\n        // if parameter is function, call the function with\n        // pixelsPerSecond, otherwise simply take the value as-is\n        const intervalFnOrVal = option =>\n            typeof option === 'function' ? option(pixelsPerSecond) : option;\n        const timeInterval = intervalFnOrVal(this.params.timeInterval);\n        const primaryLabelInterval = intervalFnOrVal(\n            this.params.primaryLabelInterval\n        );\n        const secondaryLabelInterval = intervalFnOrVal(\n            this.params.secondaryLabelInterval\n        );\n\n        let curPixel = pixelsPerSecond * this.params.offset;\n        let curSeconds = 0;\n        let i;\n        // build an array of position data with index, second and pixel data,\n        // this is then used multiple times below\n        const positioning = [];\n\n        // render until end in case we have a negative offset\n        const renderSeconds = (this.params.offset < 0)\n            ? totalSeconds - this.params.offset\n            : totalSeconds;\n\n        for (i = 0; i < renderSeconds / timeInterval; i++) {\n            positioning.push([i, curSeconds, curPixel]);\n            curSeconds += timeInterval;\n            curPixel += pixelsPerSecond * timeInterval;\n        }\n\n        // iterate over each position\n        const renderPositions = cb => {\n            positioning.forEach(pos => {\n                cb(pos[0], pos[1], pos[2]);\n            });\n        };\n\n        // render primary labels\n        this.setFillStyles(this.params.primaryColor);\n        this.setFonts(`${fontSize}px ${this.params.fontFamily}`);\n        this.setFillStyles(this.params.primaryFontColor);\n        renderPositions((i, curSeconds, curPixel) => {\n            if (i % primaryLabelInterval === 0) {\n                this.fillRect(curPixel, 0, 1, height1);\n                this.fillText(\n                    formatTime(curSeconds, pixelsPerSecond),\n                    curPixel + this.params.labelPadding * this.pixelRatio,\n                    height1\n                );\n            }\n        });\n\n        // render secondary labels\n        this.setFillStyles(this.params.secondaryColor);\n        this.setFonts(`${fontSize}px ${this.params.fontFamily}`);\n        this.setFillStyles(this.params.secondaryFontColor);\n        renderPositions((i, curSeconds, curPixel) => {\n            if (i % secondaryLabelInterval === 0) {\n                this.fillRect(curPixel, 0, 1, height1);\n                this.fillText(\n                    formatTime(curSeconds, pixelsPerSecond),\n                    curPixel + this.params.labelPadding * this.pixelRatio,\n                    height1\n                );\n            }\n        });\n\n        // render the actual notches (when no labels are used)\n        this.setFillStyles(this.params.unlabeledNotchColor);\n        renderPositions((i, curSeconds, curPixel) => {\n            if (\n                i % secondaryLabelInterval !== 0 &&\n                i % primaryLabelInterval !== 0\n            ) {\n                this.fillRect(curPixel, 0, 1, height2);\n            }\n        });\n    }\n\n    /**\n     * Set the canvas fill style\n     *\n     * @param {DOMString|CanvasGradient|CanvasPattern} fillStyle Fill style to\n     * use\n     */\n    setFillStyles(fillStyle) {\n        this.canvases.forEach(canvas => {\n            const context = canvas.getContext('2d');\n            if (context) {\n                context.fillStyle = fillStyle;\n            }\n        });\n    }\n\n    /**\n     * Set the canvas font\n     *\n     * @param {DOMString} font Font to use\n     */\n    setFonts(font) {\n        this.canvases.forEach(canvas => {\n            const context = canvas.getContext('2d');\n            if (context) {\n                context.font = font;\n            }\n        });\n    }\n\n    /**\n     * Draw a rectangle on the canvases\n     *\n     * (it figures out the offset for each canvas)\n     *\n     * @param {number} x X-position\n     * @param {number} y Y-position\n     * @param {number} width Width\n     * @param {number} height Height\n     */\n    fillRect(x, y, width, height) {\n        this.canvases.forEach((canvas, i) => {\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(x + width, i * this.maxCanvasWidth + canvas.width),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const context = canvas\n                    .getContext('2d');\n                if (context) {\n                    context\n                        .fillRect(\n                            intersection.x1 - leftOffset,\n                            intersection.y1,\n                            intersection.x2 - intersection.x1,\n                            intersection.y2 - intersection.y1\n                        );\n                }\n            }\n        });\n    }\n\n    /**\n     * Fill a given text on the canvases\n     *\n     * @param {string} text Text to render\n     * @param {number} x X-position\n     * @param {number} y Y-position\n     */\n    fillText(text, x, y) {\n        let textWidth;\n        let xOffset = 0;\n\n        this.canvases.forEach(canvas => {\n            const context = canvas.getContext('2d');\n            if (context) {\n                const canvasWidth = context.canvas.width;\n\n                if (xOffset > x + textWidth) {\n                    return;\n                }\n\n                if (xOffset + canvasWidth > x && context) {\n                    textWidth = context.measureText(text).width;\n                    context.fillText(text, x - xOffset, y);\n                }\n\n                xOffset += canvasWidth;\n            }\n        });\n    }\n\n    /**\n     * Turn the time into a suitable label for the time.\n     *\n     * @param {number} seconds Seconds to format\n     * @param {number} pxPerSec Pixels per second\n     * @returns {number} Time\n     */\n    defaultFormatTimeCallback(seconds, pxPerSec) {\n        if (seconds / 60 > 1) {\n            // calculate minutes and seconds from seconds count\n            const minutes = parseInt(seconds / 60, 10);\n            seconds = parseInt(seconds % 60, 10);\n            // fill up seconds with zeroes\n            seconds = seconds < 10 ? '0' + seconds : seconds;\n            return `${minutes}:${seconds}`;\n        }\n        return Math.round(seconds * 1000) / 1000;\n    }\n\n    /**\n     * Return how many seconds should be between each notch\n     *\n     * @param {number} pxPerSec Pixels per second\n     * @returns {number} Time\n     */\n    defaultTimeInterval(pxPerSec) {\n        if (pxPerSec >= 25) {\n            return 1;\n        } else if (pxPerSec * 5 >= 25) {\n            return 5;\n        } else if (pxPerSec * 15 >= 25) {\n            return 15;\n        }\n        return Math.ceil(0.5 / pxPerSec) * 60;\n    }\n\n    /**\n     * Return the cadence of notches that get labels in the primary color.\n     *\n     * @param {number} pxPerSec Pixels per second\n     * @returns {number} Cadence\n     */\n    defaultPrimaryLabelInterval(pxPerSec) {\n        if (pxPerSec >= 25) {\n            return 10;\n        } else if (pxPerSec * 5 >= 25) {\n            return 6;\n        } else if (pxPerSec * 15 >= 25) {\n            return 4;\n        }\n        return 4;\n    }\n\n    /**\n     * Return the cadence of notches that get labels in the secondary color.\n     *\n     * @param {number} pxPerSec Pixels per second\n     * @returns {number} Cadence\n     */\n    defaultSecondaryLabelInterval(pxPerSec) {\n        if (pxPerSec >= 25) {\n            return 5;\n        } else if (pxPerSec * 5 >= 25) {\n            return 2;\n        } else if (pxPerSec * 15 >= 25) {\n            return 2;\n        }\n        return 2;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/timeline/index.js\");\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}